RegisteUI = {}

RegisteUI.AccountsRegex = "^[%w]+[.%w@_-]*$"
RegisteUI.passwordRegex = "%S+[\u4E00-\u9FA5]+"

function RegisteUI:Start( )

end
function RegisteUI:OnDestroy(  )

end

function RegisteUI:LoginBtn_OnClick( )
    self.gameObject:SetActive(false)
    self.login:SetActive(true)
    RegisteUI.ClearInfo(self)
end

function RegisteUI:RegisteBtn_OnClick(  )
    local userName=self.userName:get_text()
    local password=self.password:get_text()
    local confirm =self.confirm:get_text()


    userName = string.lower(userName)
    --userName
    if string.len(userName) == 0 or userName == nil then
        TishiCentre.DisPlayText(Text.AccountsTips)
        return
    end

    if not string.find(userName,RegisteUI.AccountsRegex) or string.sub(userName,1,2) == Text.AccountsErrorString then
        TishiCentre.DisPlayText(Text.AccountsFormError)
        return
    end

    if string.len(userName) < 6 then
        TishiCentre.DisPlayText(Text.AccountsLeastNum)
        return
    elseif string.len(userName) > 32 then
        TishiCentre.DisPlayText(Text.AccountsLongestNum)
        return
    end

    --password
    if string.len(password) == 0 or password == nil then
        TishiCentre.DisPlayText(Text.PasswordTips)
        return
    end

    if not string.find(password,RegisteUI.passwordRegex) then
        TishiCentre.DisPlayText(Text.PasswordFormError)
        return
    end

    if string.len(password) < 6 then
        TishiCentre.DisPlayText(Text.PasswordLeastNum)
        return
    elseif string.len(password) > 32 then
        TishiCentre.DisPlayText(Text.PasswordLongestNum)
        return
    end

    --confirm
    if password ~= confirm then
        TishiCentre.DisPlayText(Text.PasswordInconsistent)
        return
    end


    ClientSendMsg.SendUserCreate(userName,password)
    --self.gameObject:SetActive(false)

end

function RegisteUI:ClearInfo( )
    self.userName:set_text("")
    self.password:set_text("")
    self.confirm:set_text("")
end
