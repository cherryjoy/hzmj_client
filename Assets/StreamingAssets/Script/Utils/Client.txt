require "Utils/LuaHelpTips"
require "Utils/ClientInfo"
require "Utils/RoleInfo"
----require "Bag/BagMgr"
--require "GameBattleSelect/GameBattleMapMgr"
--require "FairyUI/FairyMgr"
--require "FashionUI/FashionMgr"
--require "Task/TaskMgr"
--require "Task/SearchMgr"
--require "Guide/GuideManager"
--require "Utils/NewPromptMgr"
require "Utils/TishiTimeMgr"
--require "GhostUI/GhostManager"
--require "GameBattleSelect/GameBattleNDBMgr"
--require "Friend/FriendMgr"
--require "Message/MessageMgr"
--require "FairySecret/FairySecretMgr"
--require "City/LuaHeadUpMgr"
--require "KingTower/KingTowerMgr"
--require "WDB/WDB_Vip"
--require "HelpUI/HelpTips"
--require "FlowerAndEgg/FlowerRedDotMgr"
--require "City/CitySceneIdMgr"
--require "GVG/GVGMgr"
--require "PushMessage/PushMessageMgr"
--require "BattleSceneUI/SettlementMgr"
--require "GamePlayConfig/Scene/DamageAniConfig"

Client = {}

B_ShowLogoWzzj2 = false
---------------------Variables------------------------
--PVP,PVE...net players
Client.NetPlayers = {}
Client.LoginPlayers = {}
Client.ClientInfo = ClientInfo
Client.RoleInfo = nil
Client.WipeInfo = {}
Client.ItemToolTip = nil
Client.AwardItemTip = nil
--Client.GameBattleNDBMgr = GameBattleNDBMgr.Init()
Client.PlatformInfo = {}
Client.OpenUIWithType = {}
Client.TotalFightObjCount = 0
-- Client.FriendMgr = FriendMgr

EClientNetWorkState ={
    NOT_UNABLE = 0,
    NORMAL = 1,
    CONNECTED_FAILED = 2,
    DISCONNECTED = 3,
}

EClientState={
    E_CS_ReconectFail = -2,
    E_CS_Reconect = -1,
    E_CS_Login = 0,
    E_CS_Hall=1,
    E_CS_PVPUI=2,
    E_CS_PVEOne=3,
    E_CS_PVEMore=4,
    E_CS_PVEMulity=5,
    E_CS_PVP=6,
    E_CS_PVPAsync=7,
    E_CS_Activity=8,
    E_CS_RoomScene=9,
    E_CS_StoreHouse=10,
    E_CS_GangCity=11,
    E_CS_Soul=12,
    E_CS_Ghost=13,
    E_CS_ChallengeQuest=14,
    E_CS_PVPStride=15,
    E_CS_FairyDevelop=16,
    E_CS_DragonWarBattle = 17,
    E_CS_ChooseRole = 18,
    E_CS_KingTower = 19,
}


----------------FightPowerDelay---------------------
Client.fightPowerDelay=false
Client.lastFightPower=nil
----------------City init var-----------------------
Client.m_CurrentState=EClientState.E_CS_Login
Client.NetState = EClientNetWorkState.NORMAL
Client.CurrentCityId = 0
---------------------Network------------------------

function Client.ListenNetwork( state,ip,port )
    require "Utils/TishiCentre"
    LuaDebug.Log(ip .. "  netState call " .. state)
    if  state ==  EClientNetWorkState.DISCONNECTED or state == EClientNetWorkState.CONNECTED_FAILED or state == EClientNetWorkState.NOT_UNABLE then
        if Client.m_CurrentState==EClientState.E_CS_Login or Client.m_CurrentState==EClientState.E_CS_Reconect then
            Client.m_CurrentState = EClientState.E_CS_Reconect
            Client.lastIP = ip
            Client.lastPort = port
            Client.NetConnectFail()
        else
            Client.NetDisconnect()
        end
        Client.ConnectGoWrong:Do()
    end

    Client.NetState = state
end

function Client.NetDisconnect()
    require "BattleSceneUI/GameBase"
	GameBase.GameExit()
end

function Client.NetConnectFail()
    local prefab = LuaUIViewCtr.OpenUIHasBg("ToolsUI/MessageBox")
    LuaMessageBox.SetDataTable(prefab, {Message = Text.ConnectError,
                                        ConfirmName = Text.RetryText ,ConfirmFunc = Client.RetryConnect,
                                        CancelName = Text.ServerList ,CancelFunc = Client.ShowServerListFunc,
                                        ref=self})
end

function Client.RetryConnect()
    LuaNetwork.DisConnect()
     LuaNetwork.Connect(Client.lastIP,Client.lastPort)
end

function Client.ShowServerListFunc()
    Client.ShowServerList:Do()
end

Client.PingThreshold = 3000
Client.PvpPingInterval = 1
Client.NormalPingInterval = 5
function Client.PingCallBack(ping)
    if not Client.RoleInfo.PingsT then
        Client.RoleInfo.PingsT = {}
    end
    local pingsT = Client.RoleInfo.PingsT
    table.insert(pingsT,ping)
    local effectPing = Client.GetEffectivePing(ping)
    if effectPing > Client.PingThreshold then
        Client.PingReachThreshold()
    end
end

function Client.GetEffectivePing(ping)
    local pingsT = Client.RoleInfo.PingsT
    table.sort(pingsT,function(data1,data2) return data1 > data2 end)
    local effectDataSum = 0
    local dataCount = #(pingsT)
    local startIndex = 1
    local endIndex = dataCount
    local effectDataCount = dataCount

    if dataCount >2 then
        startIndex = 2
        endIndex = dataCount-1
        effectDataCount = dataCount - 2
    end
    for i = startIndex,endIndex do
        effectDataSum = effectDataSum + pingsT[i]
    end
    local effectData = effectDataSum/effectDataCount

    return effectData
end

function Client.PingReachThreshold()
    LuaNetwork.DisConnect()
    LuaMessageBox.ShowSingle(Text.PingTooHigh, function ()
        GameBase.DoGameExit()
    end)
end

Client.soulBattleGlobalEvent = nil
Client.isSoulBattleInit = false
function Client.ResetTimerForSoulBattle()
  if Client.soulBattleGlobalEvent then
      Timer.RemoveGlobalEvent(Client.soulBattleGlobalEvent)
      Client.soulBattleGlobalEvent = nil
  end
  local cdTime = Client.RoleInfo.CDTimeInfo[ECDTimeType.SoulBattle]
  if cdTime > 0 then
    local leftTime,isSecondsLeft = ServerTime.GetLeftSeconds(cdTime)
    if isSecondsLeft then
      Client.soulBattleGlobalEvent = Timer.NewGlobalEvent(leftTime*10,leftTime*10,Client.OnAddSoulBattleByTime,false,nil)
    end
  end
  Client.isSoulBattleInit = true
end

function Client.OnAddSoulBattleByTime()
  local vipLevel = Client.RoleInfo.roleAttr.vipLevel
  if not vipLevel then
    vipLevel = 0
  end
  local maxCount = LuaCDataMgr.Vip():GetData2(vipLevel,WDB_Vip.SoulSceneMax)
  local curCount = Client.RoleInfo.currency[EAwardType.SoulBattle]
  if Client.soulBattleGlobalEvent then
      Timer.RemoveGlobalEvent(Client.soulBattleGlobalEvent)
      Client.soulBattleGlobalEvent = nil
  end
  if curCount <  maxCount then
      Client.RoleInfo.currency[EAwardType.SoulBattle] = Client.RoleInfo.currency[EAwardType.SoulBattle] + 1
      Client.OnSoulBattleChanged()
      Client.UpdateCurrency:Do()
  end
end

function Client.OnSoulBattleChanged()
  local vipLevel = Client.RoleInfo.roleAttr.vipLevel
  if not vipLevel then
    vipLevel = 0
  end
  local maxCount = LuaCDataMgr.Vip():GetData2(vipLevel,WDB_Vip.SoulSceneMax)
  local curCount = Client.RoleInfo.currency[EAwardType.SoulBattle]
  if not Client.isSoulBattleInit then
    return
  end

  if curCount >= maxCount then
      if Client.soulBattleGlobalEvent then
          Timer.RemoveGlobalEvent(Client.soulBattleGlobalEvent)
          Client.soulBattleGlobalEvent = nil
      end
      return
  else
      if not Client.soulBattleGlobalEvent then
        local restoreTime = LuaCDataMgr.GameConfig():GetData2(EGlobalConfig.SoulBattleCountRestoreID,WDB_GameConfig.Param)
        local serverT = ServerTime.GetServerTimeSeconds()
        Client.RoleInfo.CDTimeInfo[ECDTimeType.SoulBattle] = ServerTime.GetServerTimeSeconds() + restoreTime
        Client.ResetTimerForSoulBattle()
      end
  end
end

Client.sinewGlobalEvent = nil
function Client.ResetTimerForSinew()
    if Client.sinewGlobalEvent then
        Timer.RemoveGlobalEvent(Client.sinewGlobalEvent)
        Client.sinewGlobalEvent = nil
    end
    local cdTime = Client.RoleInfo.CDTimeInfo[ECDTimeType.Sinew]
    local leftTime,isSecondsLeft = ServerTime.GetLeftSeconds(cdTime)
    if isSecondsLeft then
      Client.sinewGlobalEvent = Timer.NewGlobalEvent(leftTime*10,leftTime*10,Client.OnAddSinewByTime,false,nil)
    end
end

function Client.OnAddSinewByTime()
    local sinewRestoreMax = tonumber(LuaCDataMgr.GameConfig():GetData2(48,WDB_GameConfig.Param2))
    local sinewCount = Client.RoleInfo.currency[EAwardType.STAMINA]
    if Client.sinewGlobalEvent then
        Timer.RemoveGlobalEvent(Client.sinewGlobalEvent)
        Client.sinewGlobalEvent = nil
    end
    if sinewCount <  sinewRestoreMax then
        Client.RoleInfo.currency[EAwardType.STAMINA] = Client.RoleInfo.currency[EAwardType.STAMINA] + 1
        Client.OnSinewChanged()
        Client.SinewChange:Do()
    end
end

function Client.OnSinewChanged()
    local sinewRestoreMax = tonumber(LuaCDataMgr.GameConfig():GetData2(48,WDB_GameConfig.Param2))
    local sinewCount = Client.RoleInfo.currency[EAwardType.STAMINA]

    if sinewCount >= sinewRestoreMax then
        if Client.sinewGlobalEvent then
            Timer.RemoveGlobalEvent(Client.sinewGlobalEvent)
            Client.sinewGlobalEvent = nil
        end
        return
    else
        if not Client.sinewGlobalEvent then
          local restoreTime = LuaCDataMgr.GameConfig():GetData2(68,WDB_GameConfig.Param)
            local serverT = ServerTime.GetServerTimeSeconds()
            Client.RoleInfo.CDTimeInfo[ECDTimeType.Sinew] = ServerTime.GetServerTimeSeconds() + restoreTime
            Client.ResetTimerForSinew()
        end
    end
end

Client.wipeGlobalEvent = nil
function Client.WipeCollectionState()
    local vipLevel = Client.RoleInfo.roleAttr.vipLevel
    local wipeMaxCount = LuaCDataMgr.Vip():GetData2(vipLevel,WDB_Vip.WipeMax)
    wipeMaxCount = tonumber(wipeMaxCount)
    local wipeInfoInBag = Client.RoleInfo.BagMgr:GetWipeInfoInBag()
    local curWipeCount = 0
    for k,v in pairs(wipeInfoInBag) do
        curWipeCount = curWipeCount + v
    end

    curWipeCount = curWipeCount + Client.WipeInfo.collection_num
    if curWipeCount < wipeMaxCount then
        Client.RoleInfo.wipeCollectionState = 1
    else
        Client.RoleInfo.wipeCollectionState = 0
    end
end

function  Client.ResetTimerForWipe ()
  if Client.wipeGlobalEvent then
    Timer.RemoveGlobalEvent(Client.wipeGlobalEvent)
    Client.wipeGlobalEvent = nil
  end

  Client.WipeCollectionState()

  if Client.RoleInfo.wipeCollectionState == 1 then
    local cdTime = Client.WipeInfo.countdown
    local leftTime,isSecondsLeft = ServerTime.GetLeftSeconds(cdTime)
    if isSecondsLeft then
        Client.wipeGlobalEvent = Timer.NewGlobalEvent(leftTime*10,leftTime*10,Client.OnAddWipeByTime,false,nil)
    end
  end
end

function Client.OnAddWipeByTime()
  if Client.wipeGlobalEvent then
    Timer.RemoveGlobalEvent(Client.wipeGlobalEvent)
    Client.wipeGlobalEvent = nil
  end

  local isUpdatePrompt = false
  if not Client.WipeInfo or Client.WipeInfo.collection_num == 0 then
    isUpdatePrompt = true
  end

  Client.WipeInfo.collection_num = Client.WipeInfo.collection_num + 1
  Client.OnWipeChanged()
  Client.WipeCountChanged:Do()
  Client.MagicBookCountChanged:Do()

  if isUpdatePrompt then
    Client.PromptStateChanged:Do(NewPromptMgr.UpdateType.WipeCount)
  end
end

Client.WipeRestoreTimeInSec = 1800
function Client.OnWipeChanged()
  Client.WipeCollectionState()

  if Client.RoleInfo.wipeCollectionState == 1 then
    if not Client.wipeGlobalEvent then
      local restoreTime = Client.WipeRestoreTimeInSec
      Client.WipeInfo.countdown = ServerTime.GetServerTimeSeconds() + restoreTime
      Client.ResetTimerForWipe()
    end
  else
    if Client.wipeGlobalEvent then
      Timer.RemoveGlobalEvent(Client.wipeGlobalEvent)
      Client.wipeGlobalEvent = nil
    end
  end
end

function  Client.UpdateGVGTime()
  if Client.updateGVGTimeEvent then
      Client.RemoveGVGTimeUpdate()
  end
  if Client.RoleInfo.GVGMgr.battlefield == nil then
      return
  end
  local leftTime = Client.RoleInfo.GVGMgr.battlefield.leftTime
  if leftTime ~= nil and leftTime ~= 0 then
      Client.updateGVGTimeEvent = Timer.NewGlobalEvent(10,leftTime*10,Client.UpdateGVGTimeHandle,false,nil)
  end
end

function Client.UpdateGVGTimeHandle()
    if Client.RoleInfo.GVGMgr.battlefield == nil then
        return
    end
    Client.RoleInfo.GVGMgr.battlefield.leftTime = Client.RoleInfo.GVGMgr.battlefield.leftTime - 1
    if Client.RoleInfo.GVGMgr.battlefield.leftTime == 0 then
        Client.RemoveGVGTimeUpdate()
    end
end

function Client.RemoveGVGTimeUpdate()
    if Client.updateGVGTimeEvent then
        Timer.RemoveGlobalEvent(Client.updateGVGTimeEvent)
        Client.updateGVGTimeEvent = nil
    end
end

function Client.UpdateGVGProgressStateTime()
    if Client.updateGVGProgressEvent then
        Client.RemoveGVGProgressStateTimeUpdate()
    end
    if Client.RoleInfo.CorpsMgr.GVGProgressTimeHint.countdown == 0 then
        return
    end
    local leftTime = Client.RoleInfo.CorpsMgr.GVGProgressTimeHint.countdown
    if leftTime ~= nil and leftTime ~= 0 then
        Client.updateGVGProgressEvent = Timer.NewGlobalEvent(10,leftTime*10,Client.UpdateGVGProgressStateTimeHandle,false,nil)
    end
end

function Client.UpdateGVGProgressStateTimeHandle()
    if Client.RoleInfo.CorpsMgr.GVGProgressTimeHint.countdown == 0 then
        return
    end
    Client.RoleInfo.CorpsMgr.GVGProgressTimeHint.countdown = Client.RoleInfo.CorpsMgr.GVGProgressTimeHint.countdown - 1
    if Client.RoleInfo.CorpsMgr.GVGProgressTimeHint.countdown == 0 then
        Client.RemoveGVGProgressStateTimeUpdate()
    end
end

function Client.RemoveGVGProgressStateTimeUpdate()
    if Client.updateGVGProgressEvent then
        Timer.RemoveGlobalEvent(Client.updateGVGProgressEvent)
        Client.updateGVGProgressEvent = nil
    end
end

Client.GhostMoneyEvent = nil
Client.GhostDiamondEvent = nil
function Client.ResetGhostTimes()
    Client.ResetGhostTime(true)
    Client.ResetGhostTime(false)
end

function Client.ResetGhostTime(isGold)
    local resetTime
    if isGold then
        if Client.GhostMoneyEvent then
            Timer.RemoveGlobalEvent(Client.GhostMoneyEvent)
            Client.GhostMoneyEvent = nil
        end
        resetTime=Client.RoleInfo.GhostMgr.sacrificeAttr.goldResetTime
    else
        if Client.GhostDiamondEvent then
            Timer.RemoveGlobalEvent(Client.GhostDiamondEvent)
            Client.GhostDiamondEvent = nil
        end
        resetTime=Client.RoleInfo.GhostMgr.sacrificeAttr.diamondResetTime
    end
    if not resetTime then resetTime=0 end
    local cdTime,time
    time,cdTime=ServerTime.GetLeftSeconds(resetTime)
    if cdTime then
        if isGold then
            Client.GhostMoneyEvent = Timer.NewGlobalEvent(time*10,time*10,Client.GhostGoldTimeEnd,false,nil)
        else
            Client.GhostDiamondEvent = Timer.NewGlobalEvent(time*10,time*10,Client.GhostDiamondTimeEnd,false,nil)
        end
    end
end

function Client.GhostDiamondTimeEnd()
    Client.GhostDiamondEvent=nil
    Client.PromptStateChanged:Do(NewPromptMgr.UpdateType.GhostResetTime)
end

function Client.GhostGoldTimeEnd()
    Client.GhostMoneyEvent=nil
    Client.PromptStateChanged:Do(NewPromptMgr.UpdateType.GhostResetTime)
end
-----------------------------------GhostShopDayCount--------------------------------------
Client.GhostShopGlobalEvent = nil
function Client.ResetTimerForGhostShop()
    if Client.GhostShopGlobalEvent then
        Timer.RemoveGlobalEvent(Client.GhostShopGlobalEvent)
        Client.GhostShopGlobalEvent = nil
    end
    local cdTime = Client.RoleInfo.CDTimeInfo[ECDTimeType.GhostShopDayCount]
    local leftTime,isSecondsLeft = ServerTime.GetLeftSeconds(cdTime)
    local GhostShopRestoreMax = tonumber(LuaCDataMgr.GameConfig():GetData2(99,WDB_GameConfig.Param))
    local GhostShopCount = Client.RoleInfo.currency[EAwardType.GhostShopRreshCount]
    if isSecondsLeft and GhostShopCount <  GhostShopRestoreMax then
      Client.GhostShopGlobalEvent = Timer.NewGlobalEvent(leftTime*10,leftTime*10,Client.OnAddGhostShopByTime,false,nil)
    end
end

function Client.OnAddGhostShopByTime()
    local GhostShopRestoreMax = tonumber(LuaCDataMgr.GameConfig():GetData2(99,WDB_GameConfig.Param))
    local GhostShopCount = Client.RoleInfo.currency[EAwardType.GhostShopRreshCount]
    if Client.GhostShopGlobalEvent then
        Timer.RemoveGlobalEvent(Client.GhostShopGlobalEvent)
        Client.GhostShopGlobalEvent = nil
    end
    if GhostShopCount <  GhostShopRestoreMax then
        Client.RoleInfo.currency[EAwardType.GhostShopRreshCount] = Client.RoleInfo.currency[EAwardType.GhostShopRreshCount] + 1
        Client.OnGhostShopChanged()
        Client.GhostShopChange:Do()
    end
end

function Client.OnGhostShopChanged()
    require "WDB/WDB_Soul_Config"
    local GhostShopRestoreMax = tonumber(LuaCDataMgr.GameConfig():GetData2(99,WDB_GameConfig.Param))
    local GhostShopCount = Client.RoleInfo.currency[EAwardType.GhostShopRreshCount]

    if GhostShopCount >= GhostShopRestoreMax then
        if Client.GhostShopGlobalEvent then
            Timer.RemoveGlobalEvent(Client.GhostShopGlobalEvent)
            Client.GhostShopGlobalEvent = nil
        end
        return
    else
        if not Client.GhostShopGlobalEvent then
            local restoreTime = LuaCDataMgr.Soul_Config():GetData2(1,WDB_Soul_Config.FreeShop)
            restoreTime = restoreTime*60
            local serverTime = ServerTime.GetServerTimeSeconds()
            Client.RoleInfo.CDTimeInfo[ECDTimeType.GhostShopDayCount] = serverTime + restoreTime
            Client.ResetTimerForGhostShop()
        end
    end
end

-----------------------------Buy Sinew----------------------------
local buySinewMessageBox = nil
function Client.BuySinew()
  if not Client.CanBuySinew() then
    TishiCentre.DisPlayText(Text.BuyMaxForVipPrompt)
    return
  end
  Client.ShowBuyMessageBox()
end

function Client.ShowBuyMessageBox()
  require "WDB/WDB_Something_buy"
  local cost = LuaCDataMgr.Something_buy():GetData2(Client.RoleInfo.DayCountInfo[EDayCountType.Sinew]+1,WDB_Something_buy.Sinew_buy)
  if cost and cost > 0 then
    if buySinewMessageBox then
      buySinewMessageBox.CostNumLbl:set_text(tostring(cost))
    else
      buySinewMessageBox = LuaMessageBox.ShowMoneyMsgBoxWithPath("ToolsUI/SinewBuyMsgBox",Text.BuySinewPrompt,
                        Client.OnBuySinew,Client.OnCancelBuySinew,EAwardType.DIAMOND,cost,cost,nil,nil,true)
      if buySinewMessageBox.PromptLabel then
        buySinewMessageBox.PromptLabel:set_text(Text.BuySinewPrompt2)
      end
    end
  else
  end
end

function Client.OnCancelBuySinew()
  buySinewMessageBox = nil
end

function Client.OnBuySinew(cost)
  if not Client.CanBuySinew() then
    TishiCentre.DisPlayText(Text.BuyMaxForVipPrompt)
    return
  end

  if not HelpTips.CreateHelpTips(EAwardType.DIAMOND,Client.OnBuySinewHelpTip,nil,cost) then
    if buySinewMessageBox then
      LuaMessageBox.button_cancel_OnClick(buySinewMessageBox)
      buySinewMessageBox = nil
    end
    return
  end
  ClientSendMsg.SendBuySinew()
end

function Client.OnBuySinewHelpTip()
  Client.HelpTipJumpAction:Do()
end

function Client.CanBuySinew()
  local buyTime = Client.RoleInfo.DayCountInfo[EDayCountType.Sinew]
  local vipLevel = Client.RoleInfo.roleAttr.vipLevel
  if not vipLevel then
    vipLevel = 0
  end
  local canBuyCountForVip = LuaCDataMgr.Vip():GetData2(vipLevel,WDB_Vip.Sinew)

  if buyTime >= canBuyCountForVip then
    return false
  end

  return true
end

-------------------------ShowFightPower-------------------------
function Client.ShowFightPower()
  if not Client.lastFightPower then
    return
  end
  local delta=Client.RoleInfo.battleAttr.battlePower-Client.lastFightPower
  if delta>0 then
      Client.RoleInfo.PowerPromptData = function()
          Client.AutoBtnTaskGuide:Do(false)
          local pos=LuaVector3.Create(0,0.3,-1.9)
          LuaNTools.AddEffect(LuaUIViewCtr.GetParent (),UITextureHandle.UIParticleRootPath.."fx_zhanli_up",pos)
          local ref = TishiCentre.CreateTishiLabel()
          TishiCentre.DisPlayPowerText(ref,Text.FightPower,delta)
          Client.lastFightPower = Client.RoleInfo.battleAttr.battlePower
      end
      if Client.m_CurrentState == EClientState.E_CS_Hall then
           Client.RoleInfo.TishiTimeMgr:PowerEnable( Client.RoleInfo.PowerPromptData)
      end
  end
end

------------------------ExitGame--------------------
function Client.SuccessExitGame()
    Client.m_CurrentState=EClientState.E_CS_Login
    if Application.get_loadedLevelName() ~= 'Login' then
        UnityLevelMgr.LoadLevel("Login")
    end
    Client.RemoveGVGTimeUpdate()
    Client.RemoveGVGProgressStateTimeUpdate()
end

-------------------------Event Function Called From C#-----------------
function Client.FuncUIOpen(uiRefTable,luaBehavType)
    --LuaDebug.Log("startype " .. luaBehavType)
    if uiRefTable.uiName then
        if Client.OpenUIWithType[luaBehavType] then
            Client.OpenUIWithType[luaBehavType][uiRefTable] = uiRefTable
        else
            Client.OpenUIWithType[luaBehavType] = {}
            Client.OpenUIWithType[luaBehavType][uiRefTable] = uiRefTable
        end
    end
    Client.UIOpen:Do(uiRefTable)
end

function Client.FuncUIDestroy(uiRefTable,luaBehavType)
    --LuaDebug.Log("destype " .. luaBehavType)
    if uiRefTable.uiName then
        if Client.OpenUIWithType[luaBehavType] ~= nil then
            Client.OpenUIWithType[luaBehavType][uiRefTable] = nil
        end
    end
    Client.UIDestroy:Do(uiRefTable)
end

function Client.FuncApplicationPause(isPause)
    Client.ApplicationPause:Do(isPause)
end

function Client.EscapeBtnOnClick()
    --LuaDebug.Log("escape")
end

function Client.GotoGodCity()
    if not InOutBtnMoveCtr.IsActiveForSmallBtn("OpenFairy") then
        TishiCentre.DisPlayText(Text.FairySystemTips)
        return
    end
    Client.RoleInfo.FairyMgr:GotoGodCity(function ()
        TishiCentre.DisPlayText(Text.FairyTrainTips)
    end)
end

-----------------------------Events------------------------------

-----common
Client.UIOpen = Event.Create()
Client.UIDestroy = Event.Create()
Client.ApplicationPause = Event.Create()
Client.ServerMsgGet = Event.Create()
Client.BuyCDTimeSuccess = Event.Create()
Client.BuyDayCountSuccess = Event.Create()
Client.SetBigBtnMoveInOut = Event.Create()
----Concrete events
Client.SessionCreated = Event.Create()
Client.LoginSuccess = Event.Create()
Client.ConnectSuccess = Event.Create()
Client.ConnectGoWrong = Event.Create()
Client.NeedUpdateGame = Event.Create()
--Client.NetDisconnect = Event.Create()
Client.LoginBeReplaced = Event.Create()
Client.ShowServerList = Event.Create()
Client.LoginAccountExit = Event.Create()

----Bag events
Client.ItemInBagAdded = Event.Create()
Client.ItemInBagDeleted = Event.Create()
Client.ItemInBagQuantityChanged = Event.Create()

---- Tool tip
Client.DisplayItemToolTipInBag = Event.Create()
Client.DisplayHallowBagToolTip = Event.Create()
Client.DisplayHallowPartToolTip = Event.Create()
Client.DisplayAmuletBagToolTip = Event.Create()
Client.DisplayAmuletPartToolTip = Event.Create()
Client.DisplayItemToolTipInShowBag = Event.Create()
Client.DisplayGemToolTipInBag = Event.Create()
Client.DisplayGemToolTipInRole = Event.Create()
Client.ToolTipUpdate = Event.Create()
Client.AmulteItemSelect = Event.Create()
---Login events
Client.RoleSummarySuccess = Event.Create()
Client.CreateRoleSuccess = Event.Create()
Client.RemoveRoleSuccess = Event.Create()
--Client.RegisteSuccess = Event.Create()
Client.EnterGameSuccess =Event.Create()
Client.ExitGameSuccess=Event.Create()
Client.RoleSelect = Event.Create()
Client.RoleAnimationEnd = Event.Create()
Client.GetRoleNameSuccess = Event.Create()
----------Equip
Client.DisplayRoleEquip = Event.Create()
Client.DisplayEquipStuffGain = Event.Create()
Client.EquipPutOnPartChanged = Event.Create()
Client.DisplayFastSellEquip = Event.Create()
Client.EquipUpStepSuccess = Event.Create()
Client.EquipStrengthSuccess = Event.Create()
Client.EquipWashSuccess = Event.Create()
Client.EquipWashRevertSuccess = Event.Create()
Client.DisplayEquipWashResult = Event.Create()
Client.EquipAttrExchangeSuccess = Event.Create()
Client.DisplayBattleMapForGetStuff  = Event.Create()
Client.EquipStarSuccess = Event.Create()
Client.EquipItemSelect = Event.Create()

--ToolTips
Client.ShowToolTips = Event.Create()
Client.TooltipClose = Event.Create()

--FairySystem events
Client.GetFairyList = Event.Create()
Client.GodCityExplore=Event.Create()
Client.GodCityExploreTen=Event.Create()
Client.FairyFollow=Event.Create()
Client.FairyActiveSuccess=Event.Create()
Client.GodCityOpenNewSuccess=Event.Create()
Client.FairyPushState=Event.Create()
Client.FairyBattleSuccess=Event.Create()
Client.ExploreListSuccess=Event.Create()
Client.FairyUpStarSuccess=Event.Create()
Client.FairyPutOnEquipSuccess=Event.Create()
Client.FairyUpGradeSuccess=Event.Create()
Client.FairyEquipCompositeSuccess=Event.Create()
Client.FairyActiveTrainSuccess=Event.Create()
Client.FairyCellRefresh = Event.Create()
Client.RefreshBattle = Event.Create()
Client.FairyStarResetSuccess = Event.Create()
--City
Client.CityEnter = Event.Create()
Client.CityEnterNotify = Event.Create()
Client.CityQuitNotify = Event.Create()
Client.CityDisplay = Event.Create()
Client.CityRobotDisplay = Event.Create()
Client.CityMove = Event.Create()
Client.CityFObjMoveStop = Event.Create()
Client.GangNameNotify = Event.Create()
--Client.AwardStateChange = Event.Create()
Client.CityCreateCastleNpc = Event.Create()
Client.CityRemoveNpc = Event.Create()
Client.CityUpdateNpcHeadUp = Event.Create()
--Fight
Client.RoomStart = Event.Create()
Client.AIPVPSuccess = Event.Create()
Client.HonorIsOpen = Event.Create()
Client.PVPPatchTimeOut = Event.Create()
Client.ReliveSuccess = Event.Create()
Client.QuitRoomSuccess = Event.Create()
Client.ChangeCreateRole = Event.Create()

--Skill
Client.SkillEquipSuccess = Event.Create()
Client.SkillUpdateSuccess = Event.Create()
Client.SkillOpenSuccess = Event.Create()
Client.TalentUpdateSuccess = Event.Create()
Client.TalentOpenSuccess = Event.Create()
Client.TalentResetSuccess = Event.Create()

--Soul
Client.GhostLoadSuccess = Event.Create()
Client.GhostUpLoadSuccess = Event.Create()
Client.GhostChipComposeSuccess = Event.Create()
Client.GhostUpGradeSuccess = Event.Create()
Client.GhostUpStarSuccess = Event.Create()
Client.GhostEquipPutOnSuccess = Event.Create()
Client.GhostEquipComplexSuccess = Event.Create()
Client.GhostBreakSuccess = Event.Create()
Client.GhostRecoverSuccess = Event.Create()
Client.GhostRebornSuccess = Event.Create()
Client.GhostSacrificeSuccess = Event.Create()
Client.GhostSacrificeBatchSuccess = Event.Create()
Client.GhostSacrificeDayCountSuccess = Event.Create()
Client.GhostSacrificeAttrSuccess = Event.Create()
Client.GhostSellSuccess = Event.Create()
Client.AutoAddSuccess = Event.Create()
Client.GhostClipUp = Event.Create()
--BattleScene
Client.ScenePassSuccess = Event.Create()
Client.ScenePassDefeat = Event.Create()
--Player
Client.PlayerLevelUp = Event.Create()
Client.NetPlayerLevelUp = Event.Create()
Client.NetPlayerHallowChange = Event.Create()
Client.NetPlayerFairyChange = Event.Create()
Client.PlayerVipLevelChange = Event.Create()
Client.NetVipChange = Event.Create()
Client.PlayerTotalChargeChange = Event.Create()
Client.PlayerRedDiamondChange = Event.Create()

--GhostShop
Client.GhostShopChange = Event.Create()
Client.ShopDestroyView = Event.Create()
Client.GhostShopBuySuccess = Event.Create()
Client.SinewChange = Event.Create()
Client.SinewBuySuccess = Event.Create()
Client.GhostShopRefreshCount = Event.Create()
--Hallow
Client.HallowStrengthUpdate = Event.Create()
Client.HallowRefineUpdate = Event.Create()
Client.HallowAmuletUpdate = Event.Create()
Client.HallowPopupRefineUpdate = Event.Create()

Client.HallowSelectedChanged = Event.Create()

-----battle
Client.ShowGameBattleMap = Event.Create()
Client.ShowGameBattleSceneDetail = Event.Create()
Client.ShowGameBattleSweep = Event.Create()
Client.ShowSceneSimpleSweepResult = Event.Create()
Client.ShowBattleAwardDetail = Event.Create()
Client.DisplayWipeCollection = Event.Create()
Client.CloseGameBattle = Event.Create()
Client.GameBattleSceneFlag = Event.Create()
Client.GameBattleSceneFlagTip = Event.Create()

Client.GameBattleSimpleSweepSuccess = Event.Create()
Client.GameBattleHardSweepSuccess = Event.Create()
Client.GameBattleSimpleSweepRecevied = Event.Create()

Client.GameBattlePush = Event.Create()
Client.GaemBattleScenePush = Event.Create()
Client.GameBattleSceneChanged = Event.Create()
Client.GameBattleStarAwardChanged = Event.Create()

Client.BattleAttrChange = Event.Create()
Client.BattleAwardReceivedSuccess = Event.Create()
--soulbattle
Client.SoulBattleDayCountChanged = Event.Create()

--bagmgr
Client.EquipBagItemCreate = Event.Create()
Client.EquipBagItemRemove = Event.Create()
Client.EquipBagItemChange = Event.Create()
Client.HallowBagItemChange = Event.Create()
Client.CreateGhostItem = Event.Create()
Client.HallowBagItemChange = Event.Create()
Client.GhostBagItemRemove = Event.Create()

--Gem
Client.GemStonePutonChanged = Event.Create()
Client.GemStonePutonSuccess = Event.Create()
Client.GemStonePutoffSuccess = Event.Create()
Client.GemStonePartOpenedSuccess = Event.Create()
Client.GemStoneComposeSuccess = Event.Create()

--currency
Client.UpdateCurrency = Event.Create()
Client.HideCurBackGround = Event.Create()
Client.SetTitleActive = Event.Create()
--task
Client.TaskStateUpdate = Event.Create()

--fashion
Client.FashionUpDecorationSuccess = Event.Create()
Client.FashionDecorationTrainSuccess = Event.Create()
Client.FashionTrainSaveSuccess = Event.Create()
Client.FashionBuySuccess = Event.Create()
Client.FashionPutOnSuccess = Event.Create()
Client.FashionPutOffSuccess = Event.Create()
Client.NetFashionChange = Event.Create()
Client.FashionTimePush = Event.Create()
Client.GetPlayerModel = Event.Create()
--Chat
Client.NetChatChange = Event.Create()
Client.NetFriendChatChange = Event.Create()
Client.RefreshContent = Event.Create()
Client.StrentchStateChange = Event.Create()
Client.DisplaySuperLinkInChatCenter = Event.Create()
Client.EmotionSelect = Event.Create()
Client.NetRoleInfoGet = Event.Create()
Client.FriendSelect = Event.Create()
Client.FriendItemCellSelect = Event.Create()
Client.FriendItemCellRedPoint = Event.Create()
Client.NewActivityRefresh = Event.Create()
Client.NewFloorRefresh = Event.Create()
Client.ChatFriendListGet = Event.Create()
Client.ChatFriendMsgGet = Event.Create()
Client.SwitchToChatTab = Event.Create()
--shop
Client.RefreshShopGetData = Event.Create()
Client.RefreshShopBuySuccess = Event.Create()
Client.GetShopItemSuccess = Event.Create()
Client.GetShopItemBatchSuccess = Event.Create()
Client.GetSecretInfoSuccess = Event.Create()
Client.DayResetSuccess = Event.Create()

Client.NDBShopBuy = Event.Create()
Client.NDBShopBuySuccess = Event.Create()

--Achievement
Client.RefreshAchieveList = Event.Create()
Client.RefreshAwardList = Event.Create()
Client.GetAchieveAwardSuccess = Event.Create()

--SignIn
Client.SignInOpenUIGetData = Event.Create()
Client.GetSignInAwardData = Event.Create()
Client.GetSignInFullAwardData = Event.Create()

--SceneDaily
Client.SceneDailySweepSuccess = Event.Create()--Arena
Client.OnArenaEnter = Event.Create()
Client.OnArenaRecord = Event.Create()
Client.OnBattleInfo = Event.Create()
Client.OnArenaRank = Event.Create()--DiamondMoney
Client.AlchemySuccess = Event.Create()
Client.SceneDailyUpdate = Event.Create()
--Vitality
Client.OnVitalityAwardSuccess = Event.Create()
--RankingList
Client.OnRankData = Event.Create()
Client.OnCorpsData = Event.Create()
--GotoBackUI
Client.GotoBackUI = Event.Create()

--Guide
Client.EnterBattle = Event.Create()
Client.FinishBattle = Event.Create()
Client.OpenNewBtn = Event.Create()
Client.RefreshBigBtn = Event.Create()
Client.ReachNPC = Event.Create()
Client.StartGuide = Event.Create()
Client.AutoBtnTaskGuide = Event.Create()
--PVEMore
Client.CreateRoomSuccess = Event.Create()
Client.OnGetPveRoomList = Event.Create()
Client.OnPveAddPlayer = Event.Create()
Client.OnPveRemovePlayer = Event.Create()
Client.OnPveRoomDestroy = Event.Create()
Client.OnPveRoomInfoUpdate = Event.Create()
Client.OnPveAddPlayerFromHall = Event.Create()
Client.ChangeHost = Event.Create()
Client.GetPveEmployListSuccess = Event.Create()

--Wipe collection
Client.MagicBookCountChanged = Event.Create()
Client.BuyWipeConllectionSuccess = Event.Create()
Client.WipeCollectedSuccess = Event.Create()
Client.WipeCountChanged = Event.Create()

Client.OnRoomStart = Event.Create()

----new prompt point ----
Client.PromptStateChanged = Event.Create()

Client.PromptPointChanged = Event.Create()

Client.ExpValuesChanged=Event.Create()

--任务界面打开---主界面相应按钮关闭--------
Client.DoGameHallCityButtonOnOff=Event.Create()

--Corps --
Client.CreateCorpsSuccess = Event.Create()
Client.GetCorpsList = Event.Create()
Client.DissolveCorps = Event.Create()
Client.ExitCorps = Event.Create()
Client.SetRecruitConSuccess = Event.Create()
Client.PubRecruitSuccess = Event.Create()
Client.GetCorpsLogSuccess = Event.Create()
Client.GetCorpsAppLyListSuccess = Event.Create()
Client.TransferColonelSuccess = Event.Create()
Client.GetCorpsInfoSuccess = Event.Create()
Client.GetApplyDialogInfoSuccess = Event.Create()
Client.GetApplyInfoSuccess=Event.Create()
Client.GetAppliedCorpsListSuccess=Event.Create()
Client.GetMyCorpsInfoSuccess = Event.Create()
Client.GetMemeberListSuccess = Event.Create()
Client.SetCorpsDescSuccess = Event.Create()
Client.ApplyCheckSuccess = Event.Create()
Client.ExpelMemberSuccess = Event.Create()
Client.BeExpeledSuccess = Event.Create()
Client.AppointMemberSuccess = Event.Create()
Client.GetCorpsRankSuccess = Event.Create()
Client.GetCorpsSearch = Event.Create()
Client.CropsListRefresh = Event.Create()
Client.AutoIntoGVG = Event.Create()
--占星
Client.GetAstrologyInfoSuccess = Event.Create()
Client.AstrologyRollSuccess = Event.Create()
Client.GetAstrologyRankSuccess =Event.Create()

--挖矿
Client.CreateMinerCityNpc = Event.Create()
Client.UpdateMinerCityNpc = Event.Create()
Client.OnMinerNPCClick = Event.Create()
Client.AutoNextMining = Event.Create()
Client.MiningEnd = Event.Create()
Client.KeyOpenTearsureBox = Event.Create()
Client.OneKeyOpenAward = Event.Create()
Client.GetCorpsMineInfo = Event.Create()
Client.StartMineSuccess = Event.Create()
Client.OpenAwardPanel = Event.Create()
Client.OpenStartPanelSuccess = Event.Create()
Client.GetMineAwardSuccess = Event.Create()
Client.GetMineCorpsList = Event.Create()
Client.OnGetMyMineRecored = Event.Create()
Client.OnGetCorpsMineRecored = Event.Create()
Client.MineUpdateSuccess = Event.Create()
Client.MineNext = Event.Create()
Client.GetExpectAward = Event.Create()
--千层塔
Client.GetKiloTowerHallSuccess = Event.Create()
Client.GetKiloTowerRankSuccess = Event.Create()
Client.GetKiloTowerRankRewardOpenSuccess = Event.Create()
Client.GetKiloTowerLastRankSuccess = Event.Create()
Client.GetKiloTowerEmbraveBufferInfoSuccess = Event.Create()
Client.GetEmbraveHistroySuccess =Event.Create()
Client.GetKiloTowerPushTowerHallSuccess =Event.Create()
Client.GetKiloTowerBattleEnterSuccess =Event.Create()
Client.GetKiloTowerBattleFinishedSuccess =Event.Create()
Client.GetKiloTowerSweepSuccess =Event.Create()
Client.KiloTowerSweepReceive = Event.Create()
Client.KiloTowerCheckSweepStatus = Event.Create()
Client.KiloTowerUpdateOrder = Event.Create()

----驯兽场
Client.SetBeastCellData = Event.Create()
Client.GetBeastInfo = Event.Create()
Client.GetQuotaList = Event.Create()
Client.GetTrainLogList = Event.Create()
Client.GetBeastYesterdayInfo = Event.Create()
Client.ExchangeBeastTimes = Event.Create()
Client.GetApplyInfo = Event.Create()
Client.GetAllotLog = Event.Create()
----boss商店
Client.GetWarehouseSize = Event.Create()
Client.GetYesterdySpoils = Event.Create()
Client.GetWarehouse = Event.Create()
Client.GetProgressStore = Event.Create()
Client.GetApplyInfoCell = Event.Create()
Client.GetBeastApplyCheck = Event.Create()
Client.GetBApplyerInfo = Event.Create()
Client.GetBeastApplyerCheck = Event.Create()
Client.ExchangeSuc = Event.Create()
Client.RefreshBeastJoinNumber = Event.Create()
-----航海
Client.NavigationSuccess = Event.Create()
Client.NavigationRefreshCount = Event.Create()
Client.GetNavigationAwardLog = Event.Create()
Client.GetNavigationAwardLogAll = Event.Create()
Client.GetNavigationMysticaAward = Event.Create()
Client.GetMysticaAwardSuccess = Event.Create()
Client.RefreshMysticaAwardNpc = Event.Create()
Client.NavigationRefreshBuyCount = Event.Create()
Client.GetMysticaAwardLog = Event.Create()
-- Client.GotoMatterAward = Event.Create()
Client.ResetNavigationDouble = Event.Create()

--屠龙殿堂
Client.DragonInspire = Event.Create()
Client.UpdateBossHP = Event.Create()
Client.DragonGuess = Event.Create()
Client.DragonPalace = Event.Create()
Client.DragonRanking = Event.Create()
Client.DragonPlayerRelive = Event.Create()
Client.DragonStatue = Event.Create()
Client.BossGetReward = Event.Create()

--platform
Client.onSdkInitFinish = Event.Create()

--守卫皇城（征讨）
Client.CastleDefendEnter = Event.Create()
Client.CastleDefendNpcEnter = Event.Create()
Client.CastleDefendAdd = Event.Create()
Client.CastleDefendRemove = Event.Create()
Client.CastleDefendUpdate = Event.Create()
Client.CastleDefendRank = Event.Create()
Client.CastleDefendRoleRank = Event.Create()
Client.CastleDefendRoleRankInfo = Event.Create()
Client.CastleDefendKnowEnemy = Event.Create()

--军团入围赛
Client.CorpsSelectedEnter = Event.Create()
Client.CorpsSelectedNpcEnter = Event.Create()
Client.CorpsSelectedAdd = Event.Create()
Client.CorpsSelectedRemove = Event.Create()
Client.CorpsSelectedUpdate = Event.Create()
Client.CorpsSelectedRank = Event.Create()

--GVG主城
Client.GVGInspireOpen = Event.Create()
Client.GVGInspire = Event.Create()
Client.GVGInspireRecord = Event.Create()
Client.GVGAttendRole = Event.Create()
Client.GVGBattleReport = Event.Create()
Client.GVGStartCountDown = Event.Create()
--voice chat
Client.OnVoiceChatUploadFinish = Event.Create()

--Friend
Client.ActivityCDTimeUpdate = Event.Create()

--king road
Client.KingRoadReset = Event.Create()
Client.KingRoadReceiver = Event.Create()

--friend
Client.GetFriendListSuccess     = Event.Create()
Client.GetFriendGangListSuccess = Event.Create()
Client.FriendSearchSuccess      = Event.Create()
Client.AddFriendSuccess         = Event.Create()
Client.DeleteFriendSuccess      = Event.Create()
Client.GetDefeatSearchFriend    = Event.Create()

-----soul battle
Client.SoulBattleAwardChanged = Event.Create()

---- HeadUp
Client.TitleEquipOn = Event.Create()
Client.TitleEquipOff = Event.Create()

Client.AnnounceHandle = Event.Create()
Client.ShowOrHideAnnounce = Event.Create()
Client.ChooseRoleExitBtn = Event.Create()

---- HeadProtrait
Client.FlushPortraitInfo = Event.Create()

Client.ChargeDoubleAmount = Event.Create()

Client.HelpTipJumpAction = Event.Create()
--- ActiveUI
Client.SetActiveUI = Event.Create()
Client.ActivityStart = Event.Create()
Client.ActivityEnd = Event.Create()
Client.GVGProgressState = Event.Create()
Client.ActivityStartTime = Event.Create()
--- FairySecret
Client.GetFairySecretInfo = Event.Create()
Client.GetPlayerDetailInfo = Event.Create()
Client.GetYesterdayRank = Event.Create()

-------flower and egg
Client.FlowerOpen = Event.Create()
Client.FlowerEggOpen = Event.Create()
Client.FlowerLogOpen = Event.Create()
Client.FlowerSendSuccess = Event.Create()
Client.FlowerSendEggSuccess = Event.Create()
Client.RefreshFlowerLog = Event.Create()

------Charge
Client.ChargeDailyAward = Event.Create()
Client.ChargeTotalInfoGet = Event.Create()
Client.ChargeTotalActivityOpen = Event.Create()
Client.ChargeFirstMsg = Event.Create()
Client.EnterChargeFundUI = Event.Create()
Client.BuyChargeFundSuccess = Event.Create()
Client.GetFundAwardSuccess = Event.Create()

-------GVG
Client.GVGFinalGameStateChange = Event.Create()
Client.GVGFinalPlayerStateChange = Event.Create()
Client.CityPositionChange = Event.Create()
Client.GVGFinalPointChange = Event.Create()
Client.GVGPlayerPointChange = Event.Create()

---------message
Client.InitMessageBtnStatus = Event.Create()
Client.UpdataMessageDataList = Event.Create()

------Title
Client.TitlePutOn = Event.Create()
Client.TitleTakeOff = Event.Create()
Client.TitleChange = Event.Create()
Client.RefreshTitleUI = Event.Create()
Client.GetTitleValue = Event.Create()
------Knockout
Client.KnockoutReadyMsg = Event.Create()
Client.KnockoutGetData = Event.Create()
Client.KnockoutGvGroup = Event.Create()
Client.KnockoutRanking = Event.Create()
Client.GVGCorpsMemberInfo = Event.Create()
Client.CreateGvGStatue = Event.Create()
Client.ShowGVGTimerReward = Event.Create()
------KingTower
Client.KingTowerEnter = Event.Create()
Client.KingTowerPointUpdate = Event.Create()
Client.GetKingTowerRoom = Event.Create()
Client.EnterKingTowerRoom = Event.Create()
Client.DestroyChatMainUI = Event.Create()
Client.DestroyKingTowerRoom = Event.Create()
Client.KingTowerRemovePlayer = Event.Create()
Client.KingTowerPointStat = Event.Create()
Client.KingTowerKillStat = Event.Create()
Client.KingTowerQuit = Event.Create()
---------------------SevenDay--------------------------
Client.EnterSevenDayUI = Event.Create()
Client.GetSevenDayListWithDay = Event.Create()
Client.RefreshDayListWithDay = Event.Create()
Client.GetDayAwardSuccess = Event.Create()
Client.RefreshSevenDayIsView = Event.Create()
Client.RefreshPushMessage = Event.Create()
Client.RefreshSevenDayBtnEffect = Event.Create()
