require "NetProtocol/LuaProto"
require "NetProtocol/module_05_core"
--require "NetProtocol/NP_BaseType"
--require "NetProtocol/NP_ClientServer"
--require "NetProtocol/NP_World_Client2Server"
ClientSendMsg = {}

sendMsgNameTable =  Util.TableInvert(NetOpcodes_C2S)
function ClientSendMsg.SendNetMsg(netCode,buffer,bufferLength )
	LuaDebug.Log("sendId:"..netCode)
	LuaNetwork.SendNetMessage(netCode,buffer,bufferLength)
end

function ClientSendMsg.SendEmptyMsg(netCode)
		--LuaDebug.Log("sendId:"..netCode .. " " .. sendMsgNameTable[netCode])
	LuaNetwork.SendNetEmptyMessage(netCode)
end

function ClientSendMsg.SendCastMsg(netCode,dataTypeId,buffer,bufferLength)
	LuaNetwork.SendCastNetMessage(netCode,dataTypeId,buffer,bufferLength)
end


--Base type msg send
function ClientSendMsg.SendIntMsg(netCode,intValue)
	local buffer,bufferLength = LuaProto.serializeInt(intValue)
	LuaNetwork.SendNetMessage(netCode,buffer,bufferLength)
end
function ClientSendMsg.SendLongMsg(netCode,longValue)
	local buffer,bufferLength = LuaProto.serializeLong(longValue)
	LuaNetwork.SendNetMessage(netCode,buffer,bufferLength)
end
function ClientSendMsg.SendLongIdMsg(netCode,longIdValue)
	local buffer,bufferLength = LuaProto.serializeLongId(longIdValue)
	LuaNetwork.SendNetMessage(netCode,buffer,bufferLength)
end
function ClientSendMsg.SendFloatMsg(netCode,floatValue)
	local buffer,bufferLength = LuaProto.serializeFloat(floatValue)
	LuaNetwork.SendNetMessage(netCode,buffer,bufferLength)
end
function ClientSendMsg.SendStringMsg(netCode,stringValue)
	local buffer,bufferLength = LuaProto.serializeString(stringValue)
	LuaNetwork.SendNetMessage(netCode,buffer,bufferLength)
end
function ClientSendMsg.SendBoolMsg(netCode,boolValue)
	local buffer,bufferLength = LuaProto.serializeBool(boolValue)
	LuaNetwork.SendNetMessage(netCode,buffer,bufferLength)
end

function  ClientSendMsg.SendAuth(name,password)
	local data = PBMsgRoleInfoReq.Create()
	data.UserName = name
	data.Passwd = password
	data.ServerID = 584002
	data.GameID = 584
	data.EratingID = 584002
	local buffer,length = LuaProto.serialize(data)
	ClientSendMsg.SendNetMsg(enumMSGID_MODULE_05.ID_ROLE_REQ,buffer,length)
end

function ClientSendMsg.SendUserCreate(name,password)
	--[[
	local data = C2SUserCreate.Create()
	data.userName=name
	password = string.lower(name) .. " " .. string.lower(password)
	data.password=LuaUtil.HashEncrypt(password)--]]

	local data = PBVector3.Create()
	data.x = 0.9
	data.y = 1.1
	data.z = -1
	data.count = number_to_id(1)
	--local buffer, length = LuaProto.serialize(data)
	--ClientSendMsg.SendNetMsg(NetOpcodes_C2S.C2S_USER_CREATE,buffer,length)

	local test = PBTest.Create()
	test.intv = 123456
	test.longv = long_get(10)
	test.floatv = -0.88
	test.stringv = "hello world!"
	test.boolv = true
	test.vectorv = data
	test.enumv = enumChatMessageType.WORLD
	test.longvop = long_get(88888888888)
	test.floatvre = {}
	test.floatvre[1] = 12.3
	test.floatvre[2] = 1.11111

	local buffer, length = LuaProto.serialize(test)
	ClientSendMsg.SendNetMsg(NetOpcodes_C2S.C2S_AUTH,buffer,length)
	--]]
end


--normally roleId is nil
function  ClientSendMsg.SendRawAuth(name,passwd,roleId)
	--data.userType = GameDefine_platformCode
	--if roleId is not null, we reconnect and log direct to gamehall
	--if roleId then
	--	data.roleId = roleId
	--end
	local data = PBMsgRoleInfoReq.Create()
	data.UserName = name
	data.uid = name
	data.openid = name
	data.ServerID = 584002
	data.GameID = 584
	data.EratingID = 584002
	data.Mac = ClientSendMsg.GetIDFA()
	data.token = passwd
	if Application.get_platform()==ERuntimePlatform.IPhonePlayer then
		data.client_type = 'ios'
	elseif Application.get_platform()==ERuntimePlatform.Android then
		data.client_type = 'android'
	else
		data.client_type = 'windows'
	end
	data.CodeVersion = Client.ClientVersion
	local buffer,length = LuaProto.serialize(data)
	ClientSendMsg.SendNetMsg(enumMSGID_MODULE_05.ID_ROLE_REQ,buffer,length)
end

--我们的游戏在appstore上就要求ios6以上，所以没有必要判断系统
function  ClientSendMsg.GetIDFA()
	local IDFA = ""
	if Device then
		IDFA = PluginTool.SharedInstance():GetMacAddress()
	end
	return IDFA
end

function ClientSendMsg.SendGM(command,params)
   local data=C2SGM.Create()
   data.command=command
   data.params=params
   local buffer,length = LuaProto.serialize(data)
   ClientSendMsg.SendNetMsg(NetOpcodes_C2S.C2S_GM,buffer,length)
   LuaDebug.Log(command)
   LuaDebug.Log(params[1])
end

function  ClientSendMsg.SendCreateRoom(amount, horse, addition)
	local data = PBMsgCreateRoomReq.Create()
	data.amount = amount
	data.horse = horse
	data.addition = addition
	local buffer,length = LuaProto.serialize(data)
	ClientSendMsg.SendNetMsg(enumMSGID_MODULE_05.ID_GAME_ROOM_CREATE_REQ,buffer,length)
end

function ClientSendMsg.SendEnterRoom(roleid, passwd)
	local data = PBMsgEnterRoomReq.Create()
	data.roleid = roleid
	data.passwd = passwd
	local buffer,length = LuaProto.serialize(data)
	ClientSendMsg.SendNetMsg(enumMSGID_MODULE_05.ID_GAME_ROOM_ENTER_REQ,buffer,length)
end

function ClientSendMsg.SendReadyRoom()
	local data = PBMsgReadyReq.Create()
	data.used = Client.RoleInfo.Used

	local buffer,length = LuaProto.serialize(data)
	ClientSendMsg.SendNetMsg(enumMSGID_MODULE_05.ID_GAME_READY_REQ, buffer, length)
end

function ClientSendMsg.SendDeleteRoom(roomId)
	local data = PBMsgGameDeleteRoomReq.Create()
	data.room_pass = roomId
	LuaDebug.Log("data.room_pass: "..data.room_pass)
	local buffer, length = LuaProto.serialize(data)
	ClientSendMsg.SendNetMsg(enumMSGID_MODULE_05.ID_GAME_DELETE_ROOM_REQ, buffer, length)
end

function ClientSendMsg.SendPlayCard(index, typeId, codeId)
	local data = PBMsgPlayCardReq.Create()
	data.index = index

	local card = PBCard.Create()
	card.type_id = typeId
	card.code_id = codeId

	data.card = card
	LuaDebug.Log("index: "..data.index.."data.card.type_id: "..data.card.type_id..", data.card.code_id: "..data.card.code_id)
	local buffer, length = LuaProto.serialize(data)
	ClientSendMsg.SendNetMsg(enumMSGID_MODULE_05.ID_GAME_PLAY_CARD_REQ, buffer, length)
end

function ClientSendMsg.SendPengCard(index, typeId, codeId, srcRoleId)
	local data = PBMsgPengCardReq.Create()
	data.index = index
	data.roleid = srcRoleId

	local card = PBCard.Create()
	card.type_id = typeId
	card.code_id = codeId

	data.card = card
	LuaDebug.Log("index: "..data.index.."data.card.type_id: "..data.card.type_id..", data.card.code_id: "..data.card.code_id)
	local buffer, length = LuaProto.serialize(data)
	ClientSendMsg.SendNetMsg(enumMSGID_MODULE_05.ID_GAME_PENG_CARD_REQ, buffer, length)
end

function ClientSendMsg.SendGangCard(index, typeId, codeId, srcRoleId, gangType)
	local data = PBMsgGangCardReq.Create()
	data.index = index
	data.roleid = srcRoleId
	data.state = gangType

	local card = PBCard.Create()
	card.type_id = typeId
	card.code_id = codeId

	data.card = card
	LuaDebug.Log("index: "..data.index.."data.card.type_id: "..data.card.type_id..", data.card.code_id: "..data.card.code_id..", state: "..gangType)
	local buffer, length = LuaProto.serialize(data)
	ClientSendMsg.SendNetMsg(enumMSGID_MODULE_05.ID_GAME_GANG_CARD_REQ, buffer, length)
end

function ClientSendMsg.SendGuoCard()
	local data = PBMsgGamePassCardReq.Create()

	local buffer, length = LuaProto.serialize(data)
	ClientSendMsg.SendNetMsg(enumMSGID_MODULE_05.ID_GAME_PASS_CARD_REQ, buffer, length)
end

function ClientSendMsg.SendWinCard(typeId, codeId)
	local data = PBMsgGameWinCardReq.Create()
	local card = PBCard.Create()
	card.type_id = typeId
	card.code_id = codeId
	data.card = card

	local buffer, length = LuaProto.serialize(data)
	ClientSendMsg.SendNetMsg(enumMSGID_MODULE_05.ID_GAME_WIN_CARD_REQ, buffer, length)
end

function ClientSendMsg.SendWinGame()
	local data = PBMsgWinGameReq.Create()

	local buffer, length = LuaProto.serialize(data)
	ClientSendMsg.SendNetMsg(enumMSGID_MODULE_05.ID_GAME_WIN_GAME_REQ, buffer, length)
end

function ClientSendMsg.SendGameResult()
	local data = PBMsgGameResultReq.Create()

	local buffer, length = LuaProto.serialize(data)
	ClientSendMsg.SendNetMsg(enumMSGID_MODULE_05.ID_GAME_RESULT_REQ, buffer, length)
end

function ClientSendMsg.SendGameBalance()
	local data = PBMsgGameBalanceReq.Create()

	local buffer, length = LuaProto.serialize(data)
	ClientSendMsg.SendNetMsg(enumMSGID_MODULE_05.ID_GAME_BALANCE_REQ, buffer, length)
end
