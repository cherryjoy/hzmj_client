TableBottom = {}

function TableBottom:Start( )
    self.PlayNum = 0
    self.LeftNum = 0
    self.CanPlayCard = false
    self.handCard = {}
    self.pengCard = {}
    self.gangCardM = {}
    self.gangCardA = {}

    Client.TableChooseCard = Client.TableChooseCard + {self, TableBottom.ChooseCard}
    Client.TablePlayCardEnd = Client.TablePlayCardEnd + {self, TableBottom.PlayCardEnd}
    Client.DeleteCard = Client.DeleteCard + {self, TableBottom.DeleteCard}
end

function TableBottom:OnDestroy( )
    Client.TableChooseCard = Client.TableChooseCard - {self,TableBottom.ChooseCard}
    Client.TablePlayCardEnd = Client.TablePlayCardEnd - {self, TableBottom.PlayCardEnd}
    Client.DeleteCard = Client.DeleteCard - {self, TableBottom.DeleteCard}
end

-- 最后一张为所发的牌
function TableBottom:CardInfoSync(handcard)
    local handCardNum = #handcard
    for i = 1, handCardNum do
        local card = handcard[i]
        LuaDebug.Log("card.type_id: "..card.type_id..", card.code_id: "..card.code_id)
        local ref = nil
        if i == 14 then
            ref = LuaUIViewCtr.OpenUINotLoseNest("MJTable/MyCard",self.CardNew)
            ref.gameObject:set_name("MyCard")
            ref.Message:target(ref.gameObject)
        else
            ref = LuaUIViewCtr.OpenUINotLoseNest("MJTable/MyCard",self.Grid:get_gameObject())
            ref.gameObject:set_name("MyCard")
            ref.Message:target(ref.gameObject)
        end

        self.handCard[i] = ref

        ref.Init(ref, card, i)

        if i == 14 then
            ref.Shinning:set_enabled(true)
            ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(768, 0, 0))

            self.CanPlayCard = true
        end
    end

    self.Grid:Reposition()
end

function TableBottom:LeftCardSync(owncards)
    if owncards.pengcard ~= nil then
        for i = 1, #(owncards.pengcard) do
            local card = owncards.pengcard[i]
            table.insert(self.pengCard, card)
            for num = 1, 3 do
                TableBottom.SetLeftCard(self, card)
            end
        end
    end

    --gangcardm gangcarda
    if owncards.gangcardm ~= nil then
        for i = 1, #(owncards.gangcardm) do
            local card = owncards.gangcardm[i]
            table.insert(self.gangCardM, card)
            for num = 1, 4 do
                TableBottom.SetLeftCard(self, card)
            end
        end
    end

    if owncards.gangcarda ~= nil then
        for i = 1, #(owncards.gangcarda) do
            local card = owncards.gangcarda[i]
            table.insert(self.gangCardA, card)
            for num = 1, 4 do
                TableBottom.SetLeftCard(self, card)
            end
        end
    end

    self.LeftCardGrid:Reposition()
end

function TableBottom:SetLeftCard(card)
    LuaDebug.Log("left card, type: "..card.type_id..", id: "..card.code_id)
    local ref = LuaUIViewCtr.OpenUINotLoseNest("MJTable/PengCard",self.LeftCardGrid:get_gameObject())
    local spriteName = MJTableCtrl.GetLeftCardSprite(card)
    ref.Card:set_spriteName(spriteName)
    ref.Card:MakePixelPerfectWithSizeInAtlas()

    self.LeftNum = self.LeftNum + 1
end

function TableBottom:ChooseCard(i)
    if not self.CanPlayCard then
        return
    end

    if self.lastIndex ~= nil and self.lastIndex ~= i then
        -- 回归原位
        self.handCard[self.lastIndex].ResetPos(self.handCard[self.lastIndex])
        self.lastIndex = nil
    end

    if i == self.lastIndex then
        ClientSendMsg.SendPlayCard(i, self.handCard[i].card.type_id, self.handCard[i].card.code_id)
        self.CanPlayCard = false
        Client.BottomPlayCard:Do(self.roleId, i, self.handCard[i].card)

        self.lastIndex = nil
    else
        self.lastIndex = i

        self.handCard[i].SetPosUp(self.handCard[i])
    end
end

function TableBottom:PlayCard(i, card)
    if i ~= nil then
        self.handCard[i].Animation(self.handCard[i])
    end
end

function TableBottom:PlayCardEnd(i)
    local card = self.handCard[i].card

    local ref = LuaUIViewCtr.OpenUINotLoseNest("MJTable/PlayCard",self.PlayedCardsGrid:get_gameObject())
    if self.PlayNum > 7 then
        ref.Card:set_depth(5)
        ref.Back:set_depth(4)
    end

    local spriteName = MJTableCtrl.GetLeftCardSprite(card)
    ref.Card:set_spriteName(spriteName)
    ref.Card:MakePixelPerfectWithSizeInAtlas()

    self.PlayedCardsGrid:Reposition()

    self.toward:get_transform():SetParent(ref.Card:get_transform())
    self.toward:get_transform():set_localPosition(LuaVector3.Create(0, 0, 0))

    -- 整理手牌
    local handCardNum = #(self.handCard)
    if i ~= handCardNum then
        self.handCard[i].Init(self.handCard[i], self.handCard[handCardNum].card, i)
        self.Grid:Reposition()
    end

    self.handCard[handCardNum].gameObject:Destroy1()
    self.handCard[handCardNum] = nil
    self.PlayNum = self.PlayNum + 1
    self.lastCard = ref
end

function TableBottom:SetHeadInfo(info, toward)
    self.toward = toward
    self.roleId = info.roleid
    local ref = LuaUIViewCtr.OpenUINotLoseNest("MJTable/TableHead",self.HeadInfo)
    ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(0, 0, 0))
    ref.Init(ref, info)
end

function TableBottom:GetCard(card)
    local handCardNum = #(self.handCard)
    local ref = LuaUIViewCtr.OpenUINotLoseNest("MJTable/MyCard",self.CardNew)
    ref.gameObject:set_name("MyCard")
    ref.Message:target(ref.gameObject)
    self.handCard[handCardNum + 1] = ref

    ref.Init(ref, card, handCardNum + 1)
    ref.Shinning:set_enabled(true)
    ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(768, 0, 0))

    self.CanPlayCard = true
end

function TableBottom:DeleteCard(srcRoleId)
    if self.roleId == srcRoleId then
        self.lastCard.Card:get_gameObject():Destroy1()
        self.PlayNum = self.PlayNum - 1
    end
end

function TableBottom:IsPengCard(card)
    LuaDebug.Log("IsPengCard")
    local num = TableBottom.GetSameCardNum(self, card)
    if num >= 2 then
        return true
    end

    return false
end

function TableBottom:IsGangACard(card)
    LuaDebug.Log("IsGangACard")
    local num = TableBottom.GetSameCardNum(self, card)
    if num >= 3 then
        return true
    end

    return false
end

function TableBottom:IsGangMCard(card)
    LuaDebug.Log("IsGangMCard")
    local have = false
    for i = 1, #(self.pengCard) do
        local tmp = self.pengCard[i]
        if card.type_id == tmp.type_id and card.code_id == tmp.code_id then
            have = true
            break
        end
    end

    if have then
        local num = TableBottom.GetSameCardNum(self, card)
        if num >= 1 then
            return true
        end
    end

    return false
end

function TableBottom:GetSameCardNum(card)
    local num = 0
    for i = 1, #(self.handCard) do
        local tmp = self.handCard[i].card
        if card.type_id == tmp.type_id and card.code_id == tmp.code_id then
            num = num + 1
            LuaDebug.Log("same card index: "..i)
        end
    end

    return num
end

function TableBottom:PengCard(card, srcRoleId)
    -- 显示左边的碰牌
    table.insert(self.pengCard, card)
    for num = 1, 3 do
        TableBottom.SetLeftCard(self, card)
    end

    self.LeftCardGrid:Reposition()

    -- 消掉手里碰出的牌
    local index = 1
    for i,v in ipairs(self.handCard) do
        if v.card.type_id == card.type_id and v.card.code_id == card.code_id then
            v.gameObject:SetActive(false)
            v.gameObject:Destroy1()
            table.remove(self.handCard, i)
        end

        index = i
    end

    for i,v in ipairs(self.handCard) do
        if v.card.type_id == card.type_id and v.card.code_id == card.code_id then
            v.gameObject:SetActive(false)
            v.gameObject:Destroy1()
            table.remove(self.handCard, i)
        end
    end

    -- 设置位置，重新组牌
    local num = #(self.handCard)
    LuaDebug.Log("PengCard handCard num: "..num)
    local oldPos = self.Grid:get_transform():get_localPosition()
    local posX = (13 - num)*45 + oldPos:x()
    self.Grid:get_transform():set_localPosition(LuaVector3.Create(posX, oldPos:y(), oldPos:z()))
    self.Grid:Reposition()

    return index
end

function TableBottom:GangCard(card, srcRoleId)
    local index = 1
    local gangA = self.IsGangACard(self, card)
    local gangM = self.IsGangMCard(self, card)


    return index
end
