GameResult = {}

function GameResult:Start( )
    Client.TableClose = Client.TableClose + {self, GameResult.TableClose}
end

function GameResult:OnDestroy( )
    Client.TableClose = Client.TableClose - {self, GameResult.TableClose}
end

function GameResult:Init(dataTotal, roleList, roomId)
    self.dataTotal = dataTotal
    local data = dataTotal.result_info
    self.roomId = roomId

    for i = 1, #(data.role_cards) do
        if data.role_cards[i].roleid == Client.RoleInfo.RoleID then
            local ref = LuaUIViewCtr.OpenUINotLoseNest("MJTable/RoleResult",self.Center)
            ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(-400, 250, 0))
            local info = MJTableCtrl.GetRoleInfo(data.role_cards[i].roleid, roleList)
            ref.Init(ref, data.role_cards[i], info)
            ref.Background:set_enabled(true)
            if data.role_list ~= nil and #(data.role_list) > 0 then
                for j = 1, #(data.role_list) do
                    if Client.RoleInfo.RoleID == data.role_list[j] then
                        ref.SetCodeCards(ref, data.code_cards)
                        ref.SetWinCard(ref, data.win_card)
                        break
                    end
                end
            else
                if Client.RoleInfo.RoleID == data.roleid then
                    ref.SetCodeCards(ref, data.code_cards)
                    ref.SetWinCard(ref, data.win_card)
                end
            end
            break
        end
    end

     local num = 0
     for i = 1, #(data.role_cards) do
         if data.role_cards[i].roleid ~= Client.RoleInfo.RoleID then
             num = num + 1

             local ref = LuaUIViewCtr.OpenUINotLoseNest("MJTable/RoleResult",self.Center)
             ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(-400, 250 - num*90, 0))
             local info = MJTableCtrl.GetRoleInfo(data.role_cards[i].roleid, roleList)
             ref.Init(ref, data.role_cards[i], info)
             if data.role_list ~= nil and #(data.role_list) > 0 then
                 for j = 1, #(data.role_list) do
                     if data.role_cards[i].roleid == data.role_list[j] then
                         ref.SetCodeCards(ref, data.code_cards)
                         ref.SetWinCard(ref, data.win_card)
                         break
                     end
                 end
             else
                 if data.role_cards[i].roleid == data.roleid then
                     ref.SetCodeCards(ref, data.code_cards)
                     ref.SetWinCard(ref, data.win_card)
                 end
             end
         end
     end

     if data.rest_cards ~= nil then
         for i = 1, #(data.rest_cards) do
             local ref = LuaUIViewCtr.OpenUINotLoseNest("MJTable/MyCard", self.RestCardsGrid:get_gameObject())
             ref.gameObject:get_transform():set_localScale(LuaVector3.Create(0.6, 0.6, 1))
             ref.Init(ref, data.rest_cards[i], i, true)
         end

         self.RestCardsGrid:Reposition()
     end

     if dataTotal.balances ~= nil and #(dataTotal.balances) > 0 then
         self.Ready:SetActive(false)
         self.Share:SetActive(true)
         self.OK:SetActive(true)
     end
 end

function GameResult:OK_OnClick()
    --ClientSendMsg.SendGameBalance(self.roomId)
    if LuaUIViewCtr.UIPanel["MJTableUI"] ~= nil then
        LuaUIViewCtr.UIPanel["MJTableUI"].HandleGameBalance(LuaUIViewCtr.UIPanel["MJTableUI"], self.dataTotal.balances)
    end

    self.gameObject:Destroy1()
end

function GameResult:Ready_OnClick()
    if self.sendReady then
        LuaDebug.LogError("sendReady, cannot send again")
        return
    end

    --发送准备协议
    ClientSendMsg.SendReadyRoom()
    self.sendReady = true
end

function GameResult:Share_OnClick()
    PlatformHandler.CallShare("", "", "", "screenshot.png", "", "0")
end

function GameResult:TableClose()
    self.gameObject:Destroy1()
end
