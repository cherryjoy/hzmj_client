RoleResult = {}

function RoleResult:Start( )

end

function RoleResult:OnDestroy( )

end

function RoleResult:Init(result, info)
    self.LeftNum = 0
    self.handeCard = {}

    --头像
    local ref = LuaUIViewCtr.OpenUINotLoseNest("MJTable/TableHead",self.gameObject)
    ref.gameObject:get_transform():set_localScale(LuaVector3.Create(0.8, 0.8, 1))
    ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(0, 0, 0))
    ref.Init(ref, info)
    ref.Score:set_enabled(false)

    -- 碰杠牌
    if result.gangm_cards ~= nil then
        for i = 1, #(result.gangm_cards) do
            for num = 1, 4 do
                RoleResult.SetLeftCard(self, result.gangm_cards[i])
            end
        end
    end

    if result.ganga_cards ~= nil then
        for i = 1, #(result.ganga_cards) do
            RoleResult.SetLeftCard(self, result.ganga_cards[i])
            for num = 1, 3 do
                RoleResult.SetLeftDownCard(self)
            end
        end
    end

    if result.gangg_cards ~= nil then
        for i = 1, #(result.gangg_cards) do
            for num = 1, 4 do
                RoleResult.SetLeftCard(self, result.gangg_cards[i])
            end
        end
    end

    if result.peng_cards ~= nil then
        for i = 1, #(result.peng_cards) do
            for num = 1, 3 do
                RoleResult.SetLeftCard(self, result.peng_cards[i])
            end
        end
    end

    self.LeftCardsGrid:Reposition()

    -- 手牌
    local posX = 60
    if self.LeftNum > 0 then
        posX = posX + 20 + 27*self.LeftNum
    end
    self.HandCardsGrid:get_transform():set_localPosition(LuaVector3.Create(posX, -28, 0))
    local sortedCards = RoleResult.SortCard(result.hand_cards)
    for i = 1, #sortedCards do
        local ref = LuaUIViewCtr.OpenUINotLoseNest("MJTable/MyCard", self.HandCardsGrid:get_gameObject())
        ref.gameObject:get_transform():set_localScale(LuaVector3.Create(0.53, 0.53, 1))
        ref.Init(ref, sortedCards[i], i, true)
        self.handeCard[i] = ref
    end

    self.HandCardsGrid:Reposition()

    -- 分数
    local scoreStr = tostring(result.score)
    if result.score > 0 then
        scoreStr = "+"..scoreStr
    end
    self.Score:set_text(scoreStr)
end

function RoleResult.SortCard(cards)
    --先分组，再排序
    local wanList = {}
    local tongList = {}
    local tiaoList = {}
    local zhongList = {}
    local faList = {}
    local baiList = {}

    local num = #cards
    for i = 1, num do
        local card = cards[i]
        if card.type_id == enumCARD_TYPE.CARD_TIAO_TYPE then
            table.insert(tiaoList, card)
        elseif card.type_id == enumCARD_TYPE.CARD_TONG_TYPE then
            table.insert(tongList, card)
        elseif card.type_id == enumCARD_TYPE.CARD_WANG_TYPE then
            table.insert(wanList, card)
        elseif card.type_id == enumCARD_TYPE.CARD_HONG_TYPE then
            table.insert(zhongList, card)
        elseif card.type_id == enumCARD_TYPE.CARD_FCAI_TYPE then
            table.insert(faList, card)
        elseif card.type_id == enumCARD_TYPE.CARD_BBAN_TYPE then
            table.insert(baiList, card)
        end
    end

    table.sort(wanList, function(a, b)
            return a.code_id < b.code_id
    end)

    table.sort(tongList, function(a, b)
            return a.code_id < b.code_id
    end)

    table.sort(tiaoList, function(a, b)
            return a.code_id < b.code_id
    end)

    local sortedCards = {}
    local index = 1
    for i = 1, #wanList do
        sortedCards[index] = wanList[i]
        index = index + 1
    end

    for i = 1, #tongList do
        sortedCards[index] = tongList[i]
        index = index + 1
    end

    for i = 1, #tiaoList do
        sortedCards[index] = tiaoList[i]
        index = index + 1
    end

    for i = 1, #zhongList do
        sortedCards[index] = zhongList[i]
        index = index + 1
    end

    for i = 1, #faList do
        sortedCards[index] = faList[i]
        index = index + 1
    end

    for i = 1, #baiList do
        sortedCards[index] = baiList[i]
        index = index + 1
    end

    return sortedCards
end

function RoleResult:SetLeftCard(card)
    --LuaDebug.Log("left card, type: "..card.type_id..", id: "..card.code_id)
    local ref = LuaUIViewCtr.OpenUINotLoseNest("MJTable/PengCard",self.LeftCardsGrid:get_gameObject())
    ref.Card:get_transform():set_localScale(LuaVector3.Create(0.7, 0.7, 1))
    local spriteName = MJTableCtrl.GetLeftCardSprite(card)
    ref.Card:set_spriteName(spriteName)
    ref.Card:MakePixelPerfectWithSizeInAtlas()
    ref.notClear = true

    self.LeftNum = self.LeftNum + 1
end

function RoleResult:SetLeftDownCard()
    local ref = LuaUIViewCtr.OpenUINotLoseNest("MJTable/PengCardDown",self.LeftCardsGrid:get_gameObject())
    ref.Card:get_transform():set_localScale(LuaVector3.Create(0.7, 0.7, 1))
    ref.notClear = true
    self.LeftNum = self.LeftNum + 1
end

function RoleResult:SetCodeCards(cards)
    for i = 1, #cards do
        local ref = LuaUIViewCtr.OpenUINotLoseNest("MJTable/MyCard", self.CodeCardsGrid:get_gameObject())
        ref.gameObject:get_transform():set_localScale(LuaVector3.Create(0.53, 0.53, 1))
        ref.Init(ref, cards[i], i, true)
        if cards[i].code_id == 1 or cards[i].code_id == 5 or cards[i].code_id == 9 or cards[i].code_id == 0  then
            ref.Check:set_enabled(true)
        end
    end

    self.CodeCardsGrid:Reposition()
end

function RoleResult:SetWinCard(card)
    --LuaDebug.Log("SetWinCard, type: "..card.type_id..", id: "..card.code_id)
    for i = 1, #(self.handeCard) do
        local tempCard = self.handeCard[i].card
        if tempCard.type_id == card.type_id and tempCard.code_id == card.code_id then
                self.handeCard[i].Shinning:set_enabled(true)
            break
        end
    end
end
