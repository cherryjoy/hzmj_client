MJTableCtrl = {}

function MJTableCtrl:Start( )
    local mt=TextureMgr.get_Instance():LoadTexture("MJTable/MJTable", true)
    self.Texture:set_material(mt)

    if Client.IsDebugPlatform() then
        if self.DebugWin ~= nil then
            self.DebugWin:SetActive(true)
        end
    end

    Client.BottomPlayCard = Client.BottomPlayCard + {self, MJTableCtrl.HandlePlayCard}
    Client.ResetToward = Client.ResetToward + {self, MJTableCtrl.ResetToward}
    Client.TableClear = Client.TableClear + {self, MJTableCtrl.TableClear}
    Client.TableClose = Client.TableClose + {self, MJTableCtrl.TableClose}
    Client.PlayRecordVoice = Client.PlayRecordVoice + {self, MJTableCtrl.PlayRecordVoice}
    Client.NetConnectSuccess = Client.NetConnectSuccess + {self,MJTableCtrl.NetConnectSuccess}
    Client.PlayChatContent = Client.PlayChatContent + {self, MJTableCtrl.PlayChatContent}
end

function MJTableCtrl:OnDestroy( )
    Client.BottomPlayCard = Client.BottomPlayCard - {self, MJTableCtrl.HandlePlayCard}
    Client.ResetToward = Client.ResetToward - {self, MJTableCtrl.ResetToward}
    Client.TableClear = Client.TableClear - {self, MJTableCtrl.TableClear}
    Client.TableClose = Client.TableClose - {self, MJTableCtrl.TableClose}
    Client.PlayRecordVoice = Client.PlayRecordVoice - {self, MJTableCtrl.PlayRecordVoice}
    Client.NetConnectSuccess = Client.NetConnectSuccess - {self,MJTableCtrl.NetConnectSuccess}
end

function MJTableCtrl:Init(passwd, horse, beishu, rolelist)
    self.roomId = passwd
    self.horse = horse
    self.beishu = beishu
    self.ID:set_text(string.format(Text.TableName, passwd, tostring(Client.ClientVersion)))
    self.MaShu:set_text(string.format(Text.MaShuName, beishu, horse))
    MJTableCtrl.SetJuShuPaiShu(self)

    local spriteName, myDirect = MJTableCtrl.GetMyDirectSprite(Client.RoleInfo.RoleID, rolelist)
    --LuaDebug.Log("my direction: "..myDirect)
    self.myDirect = myDirect

    local angle = self.Direction:get_transform():get_localEulerAngles():z() - (myDirect - 1)*90
    self.Direction:get_transform():set_localEulerAngles(LuaVector3.Create(0, 0, angle))
    self.TimerBack:set_spriteName(spriteName)

    Client.m_CurrentState = EClientState.E_CS_TableReady
    Client.PingTime = LuaDateTime.Ticks_Now()
    Client.PingGlobalTimer = Timer.NewGlobalEvent(30,10*60*60*24,Client.CheckPing,false,nil)

    self.passType = enumCARD_PASS_TYPE.CARD_PASS_NULL_CARD

    -- 初始化
    for i = 1, 4 do
        self["Drect"..i].Init(self["Drect"..i])
    end

    self.mjtype = enumMAHJONG_TYPE.EM_HONG_TYPE
    self.Drect1.mjtype = enumMAHJONG_TYPE.EM_HONG_TYPE
end

function MJTableCtrl:InitPX(passwd, pairwin, addcode, muchwin, rolelist)
    self.roomId = passwd
    self.qidui = pairwin
    self.xiama = addcode
    self.duoxiang = muchwin
    self.ID:set_text(string.format(Text.TableName, passwd, tostring(Client.ClientVersion)))
    self.MaShu:get_gameObject():SetActive(false)
    local tips = Text.PXMJ
    if pairwin == 1 then
        tips = tips..","..Text.QiDui
    end

    if addcode == 1 then
        tips = tips..","..Text.XiaMa
        MJTableCtrl.ReSetAddCode(self)
    end

    if muchwin == 1 then
        tips = tips..","..Text.DuoXiang
    end

    self.MJTips:set_text(tips)
    self.MJTips:set_enabled(true)
    MJTableCtrl.SetJuShuPaiShu(self)

    local spriteName, myDirect = MJTableCtrl.GetMyDirectSprite(Client.RoleInfo.RoleID, rolelist)
    --LuaDebug.Log("my direction: "..myDirect)
    self.myDirect = myDirect

    local angle = self.Direction:get_transform():get_localEulerAngles():z() - (myDirect - 1)*90
    self.Direction:get_transform():set_localEulerAngles(LuaVector3.Create(0, 0, angle))
    self.TimerBack:set_spriteName(spriteName)

    Client.m_CurrentState = EClientState.E_CS_TableReady
    Client.PingTime = LuaDateTime.Ticks_Now()
    Client.PingGlobalTimer = Timer.NewGlobalEvent(30,10*60*60*24,Client.CheckPing,false,nil)

    self.passType = enumCARD_PASS_TYPE.CARD_PASS_NULL_CARD

    -- 初始化
    for i = 1, 4 do
        self["Drect"..i].Init(self["Drect"..i])
    end

    self.mjtype = enumMAHJONG_TYPE.EM_PEIX_TYPE
    self.Drect1.mjtype = enumMAHJONG_TYPE.EM_PEIX_TYPE
end

function MJTableCtrl:InitPlayBack(roleList, viewId, roomtype)
    local spriteName, myDirect = MJTableCtrl.GetMyDirectSprite(viewId, roleList)
    self.myDirect = myDirect
    local angle = self.Direction:get_transform():get_localEulerAngles():z() - (myDirect - 1)*90
    self.Direction:get_transform():set_localEulerAngles(LuaVector3.Create(0, 0, angle))
    self.TimerBack:set_spriteName(spriteName)

    self.passType = enumCARD_PASS_TYPE.CARD_PASS_NULL_CARD
    -- 初始化
    for i = 1, 4 do
        self["Drect"..i].Init(self["Drect"..i])
    end

    self.mjtype = roomtype
    self.Drect1.mjtype = roomtype
end

function MJTableCtrl:SetJuShuPaiShu()
    self.JuShu:set_text(string.format(Text.JuShuName, Client.RoleInfo.Used + 1, Client.RoleInfo.Amount, Client.RoleInfo.RestCard))
end

function MJTableCtrl:EnterRoomSync(rolelist)
    --LuaDebug.Log("rolelist: "..#rolelist)
    for i = 1, #rolelist do
        --LuaDebug.Log("roleList[i].roleid: "..rolelist[i].roleid)
        --LuaDebug.Log("roleList[i].direct: "..rolelist[i].direct)
        --LuaDebug.Log("roleList[i].rolename: "..rolelist[i].rolename)
        --LuaDebug.Log("roleList[i].integral: "..rolelist[i].integral)
    end

    MJTableCtrl.InitRoleList(self, self.myDirect, rolelist)

    self.roleList = rolelist
end

function MJTableCtrl:CardInfoSync(cardInfo)
    Client.m_CurrentState = EClientState.E_CS_Table
    --LuaDebug.Log("leftnum: "..cardInfo.leftnum)
    Client.RoleInfo.RestCard = cardInfo.leftnum
    -- 关闭 邀请
    self.Invite:SetActive(false)

    -- 强行刷一下桌面
   Client.ResetToward:Do()
   Client.TableClear:Do()

    -- 同步自己的牌
    self.Drect1.LeftCardSync(self.Drect1, cardInfo.owncards)

    if cardInfo.owncards ~= nil then
        --LuaDebug.Log("card num: "..#(cardInfo.owncards.handcard))
        --Client.RoleInfo.RestCard = Client.RoleInfo.RestCard - #(cardInfo.owncards.handcard)
        self.Drect1.CardInfoSync(self.Drect1, cardInfo.owncards.handcard)
    end

    -- 同步其他人的牌
    --LuaDebug.Log("#(cardInfo.othercards): "..#(cardInfo.othercards))
    for i = 1, #(cardInfo.othercards) do
        --LuaDebug.Log("othercards roleid: "..cardInfo.othercards[i].roleid..", handnum: "..cardInfo.othercards[i].handnum)
        for j = 1, 4 do
            if self["Drect"..j].roleId == cardInfo.othercards[i].roleid then
                --LuaDebug.Log("drect "..j.." : "..cardInfo.othercards[i].handnum)
                --Client.RoleInfo.RestCard = Client.RoleInfo.RestCard - cardInfo.othercards[i].handnum
                self["Drect"..j].CardInfoSync(self["Drect"..j], cardInfo.othercards[i].handnum)
                self["Drect"..j].LeftCardSync(self["Drect"..j], cardInfo.othercards[i])
            end
        end
    end

    -- 同步桌上的牌
    if cardInfo.tablecards ~= nil then
        --LuaDebug.Log("#(cardInfo.tablecards): "..#(cardInfo.tablecards))
        for i = 1, #(cardInfo.tablecards) do
            for j = 1, 4 do
                if self["Drect"..j].roleId == cardInfo.tablecards[i].roleid then
                    --LuaDebug.Log("drect "..j.." : "..#(cardInfo.tablecards[i].cards))
                    self["Drect"..j].PlayCardSync(self["Drect"..j], cardInfo.tablecards[i].cards)
                end
            end
        end
    end

    -- 准备手消失
    for i = 1, 4 do
        self["Drect"..i].Ready:SetActive(false)
    end

    MJTableCtrl.SetJuShuPaiShu(self)
end

function MJTableCtrl:CardInfoPlayBackSync(process, viewId)
    Client.RoleInfo.RestCard = 112
    Client.RoleInfo.Used = 1
    Client.RoleInfo.Amount = 8
    self.process = process
    local cards = {}
    for i = 1, #process.rolecard do
        if viewId == process.rolecard[i].roleid then
            for j = 1, #process.rolecard[i].cards do
                local card = MJTableCtrl.ParseCard(self, process.rolecard[i].cards[j])
                --LuaDebug.Log("type: "..card.type_id..", code: "..card.code_id)
                table.insert(cards, card)
            end
        end
    end

    self.Drect1.CardInfoSync(self.Drect1, cards)

    -- 同步其他人的牌
    for i = 1, #process.rolecard do
        for j = 1, 4 do
            if self["Drect"..j].roleId == process.rolecard[i].roleid and self["Drect"..j].roleId ~= viewId then
                self["Drect"..j].CardInfoSync(self["Drect"..j], #process.rolecard[i].cards)
            end
        end
    end

    -- 启动定时器播放
    self.playNum = 1
    self.timerNum  = 10
    if self.playTimer == nil then
        self.playTimer = Timer.NewEvent(self,self.timerNum,self.timerNum*(#self.process.sequence - self.playNum + 1), MJTableCtrl.DoPlay, false, MJTableCtrl.DoPlayFinish)
    end
end

function MJTableCtrl:DoPlay()
    local instructon = self.process.sequence[self.playNum]
    --LuaDebug.Log("******#process.sequence: "..self.playNum.."/"..#self.process.sequence..", instructon.opcode: "..instructon.opcode)
    -- ax roldid, bx card int
    if instructon.opcode == enumOP_CODE_TYPE.OP_DEAL then --发牌
        local card = MJTableCtrl.ParseCard(self, instructon.bx)
        MJTableCtrl.HandleGetCard(self, instructon.ax, card)
    elseif instructon.opcode == enumOP_CODE_TYPE.OP_PLAY then --打牌
        local card = MJTableCtrl.ParseCard(self, instructon.bx)
        MJTableCtrl.HandlePlayCard(self, instructon.ax, instructon.cx, card)
    elseif instructon.opcode == enumOP_CODE_TYPE.OP_PENG then -- 碰牌 cx为被碰牌玩家的roleid，
        local card = MJTableCtrl.ParseCard(self, instructon.bx)
        MJTableCtrl.HandlePengCard(self, instructon.ax, 1, card, instructon.cx)
    elseif instructon.opcode == enumOP_CODE_TYPE.OP_GANG then -- 杠牌 cx为被杠牌玩家的roleid，dx为杠的类型
        local card = MJTableCtrl.ParseCard(self, instructon.bx)
        MJTableCtrl.HandleGangCard(self, instructon.ax, 1, card, instructon.dx, instructon.cx)
    elseif instructon.opcode == enumOP_CODE_TYPE.OP_STEAL then -- 抢杠 ax为抢杠的玩家roleid，cx、dx、ex为抢杠玩家的roleid
        local data = {}
        data.role_list = {}
        if instructon.cx ~= nil and instructon.cx ~= 0 then
            table.insert(data.role_list, instructon.cx)
        end

        if instructon.dx ~= nil and instructon.dx ~= 0 then
            table.insert(data.role_list, instructon.dx)
        end

        if instructon.ex ~= nil and instructon.ex ~= 0 then
            table.insert(data.role_list, instructon.ex)
        end

        MJTableCtrl.PlayTableHu(self, data)
    elseif instructon.opcode == enumOP_CODE_TYPE.OP_WIN then -- 胡牌
        local data = {}
        data.roleid = instructon.ax
        MJTableCtrl.PlayTableHu(self, data)
    elseif instructon.opcode == enumOP_CODE_TYPE.OP_DRAW then -- 亡牌

    end

    self.playNum = self.playNum + 1
end

function MJTableCtrl:DoPlayFinish()
    if self.playTimer ~= nil then
        Timer.RemoveEvent(self, self.playTimer)
        self.playTimer = nil
    end
end

function MJTableCtrl:DeleteRoom_OnClick()
    local prefab = LuaUIViewCtr.OpenUIHasBg("ToolsUI/MessageBox")
    LuaMessageBox.SetDataTable(prefab, {Message = Text.DeleteRoomConfirm,
                                        ConfirmName = Text.Confirm ,ConfirmFunc = function()
                                            ClientSendMsg.SendDeleteRoom(self.roomId) end,
                                        CancelName = Text.Cancel ,CancelFunc = nil,
                                        ref=self})
end

function MJTableCtrl.GetCardSprite(card)
    local spriteName = nil
    if card.type_id == enumCARD_TYPE.CARD_TIAO_TYPE then
        spriteName = "tile_me_1"..card.code_id
    elseif card.type_id == enumCARD_TYPE.CARD_TONG_TYPE then
        spriteName = "tile_me_2"..card.code_id
    elseif card.type_id == enumCARD_TYPE.CARD_WANG_TYPE then
        spriteName = "tile_me_"..card.code_id
    elseif card.type_id == enumCARD_TYPE.CARD_HONG_TYPE then
        spriteName = "tile_me_35"
    elseif card.type_id == enumCARD_TYPE.CARD_BBAN_TYPE then
        spriteName = "tile_me_37"
    elseif card.type_id == enumCARD_TYPE.CARD_FCAI_TYPE then
        spriteName = "tile_me_36"
    end

    return spriteName
end

function MJTableCtrl.GetLeftCardSprite(card)
    local spriteName = nil
    if card.type_id == enumCARD_TYPE.CARD_TIAO_TYPE then
        spriteName = "tile_meUp_1"..card.code_id
    elseif card.type_id == enumCARD_TYPE.CARD_TONG_TYPE then
        spriteName = "tile_meUp_2"..card.code_id
    elseif card.type_id == enumCARD_TYPE.CARD_WANG_TYPE then
        spriteName = "tile_meUp_"..card.code_id
    elseif card.type_id == enumCARD_TYPE.CARD_HONG_TYPE then
        spriteName = "tile_meUp_35"
    elseif card.type_id == enumCARD_TYPE.CARD_BBAN_TYPE then
        spriteName = "tile_meUp_37"
    elseif card.type_id == enumCARD_TYPE.CARD_FCAI_TYPE then
        spriteName = "tile_meUp_36"
    end

    return spriteName
end

function MJTableCtrl.GetLeftRightCardSprite(card)
    local spriteName = nil
    if card.type_id == enumCARD_TYPE.CARD_TIAO_TYPE then
        spriteName = "tile_leftRight_1"..card.code_id
    elseif card.type_id == enumCARD_TYPE.CARD_TONG_TYPE then
        spriteName = "tile_leftRight_2"..card.code_id
    elseif card.type_id == enumCARD_TYPE.CARD_WANG_TYPE then
        spriteName = "tile_leftRight_"..card.code_id
    elseif card.type_id == enumCARD_TYPE.CARD_HONG_TYPE then
        spriteName = "tile_leftRight_35"
    elseif card.type_id == enumCARD_TYPE.CARD_BBAN_TYPE then
        spriteName = "tile_leftRight_37"
    elseif card.type_id == enumCARD_TYPE.CARD_FCAI_TYPE then
        spriteName = "tile_leftRight_36"
    end

    return spriteName
end

function MJTableCtrl.GetMyDirectSprite(roleId, roleList)
    for i = 1, #roleList do
        if roleId == roleList[i].roleid then
            if roleList[i].direct == enumDIRECTION_TYPE.DIRECTION_EAST then
                return "compassdong", roleList[i].direct
            elseif roleList[i].direct == enumDIRECTION_TYPE.DIRECTION_NORTH then
                return "compassbei", roleList[i].direct
            elseif roleList[i].direct == enumDIRECTION_TYPE.DIRECTION_WEST then
                return "compassxi", roleList[i].direct
            elseif roleList[i].direct == enumDIRECTION_TYPE.DIRECTION_SOUTH then
                return "compassnan", roleList[i].direct
            end
        end
    end
end

function MJTableCtrl:InitRoleList(myDirect, roleList)
    local idx = 1
    for i = myDirect, (myDirect + 3) do
        local index = i % 4
        if index == 0 then
            index = 4
        end

        local roleInfo = roleList[index]
        if roleInfo ~= nil and roleInfo.roleid ~= 0 then
            self["Drect"..idx].SetHeadInfo(self["Drect"..idx], roleInfo, self.TowardCard)
            self["Drect"..idx].TableHead.gameObject:SetActive(true)
        else
            if self["Drect"..idx].TableHead ~= nil then
                self["Drect"..idx].TableHead.gameObject:SetActive(false)
            end

            self["Drect"..idx].Ready:SetActive(false)
        end

        idx = idx + 1
    end
end

function MJTableCtrl:GameReady(roleStateList)
    --LuaDebug.Log("roleStateList num: "..#roleStateList)
    for i = 1, #roleStateList do
        --LuaDebug.Log("roleId : "..tostring(roleStateList[i].roleid)..", state : "..tostring(roleStateList[i].state))
        for j = 1, 4 do
            if self["Drect"..j].roleId == roleStateList[i].roleid then
                if roleStateList[i].state ~= 0 then
                    self["Drect"..j].Ready:SetActive(true)
                    -- 1 没选择下码
                    -- 2 选择过下码
                    if self.Drect1.roleId == roleStateList[i].roleid and roleStateList[i].state == 2 then
                        MJTableCtrl.HandleAddCode(self, nil)
                    end
                end

                -- 刷新庄主信息
                if roleStateList[i].makers == 0 then
                    self["Drect"..j].TableHead.Zhuang:SetActive(false)
                else
                    self["Drect"..j].TableHead.Zhuang:SetActive(true)
                end

                -- 刷新rolelist中的庄主信息
                for k = 1, #(self.roleList) do
                    if self.roleList[k].roleid == roleStateList[i].roleid then
                        self.roleList[k].makers = roleStateList[i].makers
                    end
                end

                -- 下码
                --LuaDebug.Log("roleStateList[i].addcode: "..roleStateList[i].addcode)
                if roleStateList[i].addcode == 0 then
                    self["Drect"..j].TableHead.AddCode:SetActive(false)
                elseif roleStateList[i].addcode == 1 then
                    self["Drect"..j].TableHead.AddCode:SetActive(true)
                end
            end
        end
    end
end

function MJTableCtrl:IsPengGang(roleId, card)
    local peng = self.Drect1.IsPengCard(self.Drect1, card)
    local gangType = self.Drect1.IsGangMPlayCard(self.Drect1, card)
    --LuaDebug.Log("peng: "..tostring(peng)..", gangType: "..tostring(gangType))
    if peng or gangType then
        self.ResultCard:SetActive(true)
        if gangType then
            self.passType = enumCARD_PASS_TYPE.CARD_PASS_DEAL_CARD
            self.Gang:SetActive(true)
            self.Peng:SetActive(true)
            self.Win:SetActive(false)
            self.tempGangType = gangType
        else
            self.Gang:SetActive(false)
        end

        if peng then
            self.passType = enumCARD_PASS_TYPE.CARD_PASS_DEAL_CARD
            self.Peng:SetActive(true)
            self.Win:SetActive(false)
        end

        self.tempCard = card
        self.tempRoleId = roleId
    end
end

function MJTableCtrl:HandlePlayCard(roleId, index, card, result)
    if roleId == self.Drect1.roleId and result ~= nil then
        return
    end

    LuaDebug.Log("result: "..tostring(result))

    if roleId ~= self.Drect1.roleId then
        if result == 5 then
            MJTableCtrl.IsPengGang(self, roleId, card)
            return
        end
    end

    --LuaDebug.Log("roleId: "..roleId..", play card, type: "..card.type_id..", id: "..card.code_id)
    -- 播放出牌
    --if self.mjtype == enumMAHJONG_TYPE.EM_HONG_TYPE then
        NGUITools.PlaySoundByPath("Music/Card/"..MJTableCtrl.GetRoleSex(self, roleId)..card.type_id..card.code_id)
    --elseif self.mjtype == enumMAHJONG_TYPE.EM_PEIX_TYPE then
    --    NGUITools.PlaySoundByPath("Music/Card/1"..MJTableCtrl.GetRoleSex(self, roleId)..card.type_id..card.code_id)
    --end

    --self.TowardCard:SetActive(true)
    MJTableCtrl.DoCountDownFinish(self)
    -- 判断当前的牌是否能碰、杠
    if roleId ~= self.Drect1.roleId then
        if result ~= 0 then
            if result == 4 then
                -- 判断是否胡牌
                local huPai = self.Drect1.IsHuPai(self.Drect1, card)
                if huPai then
                    MJTableCtrl.IsPengGang(self, roleId, card)

                    self.ResultCard:SetActive(true)
                    self.passType = enumCARD_PASS_TYPE.CARD_PASS_WINN_CARD
                    self.Win:SetActive(true)
                    self.Peng:SetActive(false)
                else
                    self.Win:SetActive(false)
                end
            elseif result == 5 then

            else
                MJTableCtrl.IsPengGang(self, roleId, card)
                if self.mjtype == enumMAHJONG_TYPE.EM_PEIX_TYPE then
                    -- 判断是否胡牌
                    local huPai = self.Drect1.IsHuPai(self.Drect1, card)
                    if huPai then
                        self.ResultCard:SetActive(true)
                        self.passType = enumCARD_PASS_TYPE.CARD_PASS_DEAL_CARD
                        self.Win:SetActive(true)
                        self.Peng:SetActive(false)
                    else
                        self.Win:SetActive(false)
                    end
                end
            end
        end
    end

    for i = 1, 4 do
        if self["Drect"..i].roleId == roleId then
            self["Drect"..i].HandlePlayCard(self["Drect"..i], index, card)
        end
    end
end

function MJTableCtrl:HandleGetCard(roleId, card, cardList)
    --LuaDebug.Log("roleid: "..roleId)

    Client.RoleInfo.RestCard = Client.RoleInfo.RestCard - 1

    MJTableCtrl.SetJuShuPaiShu(self)
    -- 摸牌只对自己广播牌，其他方只广播roleId
    if self.Drect1.roleId == roleId and card ~= nil then
        --LuaDebug.Log("get card, type: "..card.type_id..", id: "..card.code_id)
        -- 先判断cardList是否与手牌一致
        if cardList ~= nil then
            self.Drect1.CorrectHandCard(self.Drect1, cardList)
        end

        -- 先判断手里的牌是否有杠
        local gangType = nil
        local tmpHandCard = nil
        gangType, tmpHandCard = self.Drect1.IsGangAHandCard(self.Drect1)
        if gangType then
            self.ResultCard:SetActive(true)
            self.passType = enumCARD_PASS_TYPE.CARD_PASS_NULL_CARD
            self.Gang:SetActive(true)
            self.Peng:SetActive(false)
            self.tempGangType = gangType
            self.tempCard = tmpHandCard
            self.tempRoleId = roleId
        else
            -- 判断是否杠牌
            gangType = self.Drect1.IsGangACard(self.Drect1, card)
            if not gangType then
                gangType = self.Drect1.IsGangMGetCard(self.Drect1, card)
            end
            if gangType then
                self.ResultCard:SetActive(true)
                self.passType = enumCARD_PASS_TYPE.CARD_PASS_NULL_CARD
                self.Gang:SetActive(true)
                self.Peng:SetActive(false)
                self.tempGangType = gangType
                self.tempCard = card
                self.tempRoleId = roleId
            else
                self.Gang:SetActive(false)
            end
        end

        -- 判断是否胡牌
        local huPai = self.Drect1.IsHuPai(self.Drect1, card)
        if huPai then
            self.ResultCard:SetActive(true)
            self.passType = enumCARD_PASS_TYPE.CARD_PASS_NULL_CARD
            self.Win:SetActive(true)
            self.Peng:SetActive(false)
        else
            self.Win:SetActive(false)
        end
    end

    MJTableCtrl.CountDownStart(self, roleId)
    -- 判断是哪方摸牌
    for i = 1, 4 do
        if self["Drect"..i].roleId == roleId then
            self["Drect"..i].HandleGetCard(self["Drect"..i], card)
        end
    end
end

function MJTableCtrl:CountDownStart(roleId)
    local spriteName, myDirect = MJTableCtrl.GetMyDirectSprite(roleId, self.roleList)
    --LuaDebug.Log("my direction: "..myDirect)
    self.TimerBack:set_spriteName(spriteName)
    self.TimerBack:get_gameObject():SetActive(true)
    -- 倒计时
    self.CD = 15
    self.CountDown:set_text(tostring(self.CD))
    self.CountDown:set_enabled(true)

    if self.timer == nil then
        self.timer = Timer.NewEvent(self,10,160,MJTableCtrl.DoCountDown, false, MJTableCtrl.DoCountDownFinish)
    end
end

function MJTableCtrl:DoCountDown()
    self.CountDown:set_text(tostring(self.CD))
    self.CD = self.CD - 1
    if self.CD < 0 then
        self.CD = 0
    end
end

function MJTableCtrl:DoCountDownFinish()
    if self.timer ~= nil then
        Timer.RemoveEvent(self,self.timer)
        self.timer = nil
    end

    --self.CountDown:set_enabled(false)
    --LuaDebug.Log("DoCountDownFinish")
end

function MJTableCtrl:Peng_OnClick()
    ClientSendMsg.SendPengCard(1, self.tempCard.type_id, self.tempCard.code_id, self.tempRoleId)
end

function MJTableCtrl:Gang_OnClick()
    ClientSendMsg.SendGangCard(1, self.tempCard.type_id, self.tempCard.code_id, self.tempRoleId, self.tempGangType)
end

function MJTableCtrl:Guo_OnClick()
    ClientSendMsg.SendGuoCard(self.passType)

    self.ResultCard:SetActive(false)
    self.Gang:SetActive(false)
    self.Peng:SetActive(false)
    self.Win:SetActive(false)
end

function MJTableCtrl:Win_OnClick()
    if self.mjtype == enumMAHJONG_TYPE.EM_HONG_TYPE then
        ClientSendMsg.SendWinGame()
    elseif self.mjtype == enumMAHJONG_TYPE.EM_PEIX_TYPE then
        ClientSendMsg.SendWinGamePX()
    end
end

function MJTableCtrl:WinDebug_OnClick()
    --ClientSendMsg.SendGameQuitRoom(LuaUIViewCtr.UIPanel["MJTableUI"].roomId)
    if self.mjtype == enumMAHJONG_TYPE.EM_HONG_TYPE then
        ClientSendMsg.SendWinGame()
    elseif self.mjtype == enumMAHJONG_TYPE.EM_PEIX_TYPE then
        ClientSendMsg.SendWinGamePX()
    end
    --LuaUIViewCtr.OpenUIHasBg("MJTable/TablePeng")
end

function MJTableCtrl:HandlePengCard(roleId, index, card, srcRoleId)
    NGUITools.PlaySoundByPath("Music/Common/"..MJTableCtrl.GetRoleSex(self, roleId).."peng")

    -- 重置
    Client.ResetToward:Do()
    --消掉打牌方的牌
    Client.DeleteCard:Do(srcRoleId)

    --计时
    MJTableCtrl.CountDownStart(self, roleId)

    -- 自己可以打牌了
    if roleId == self.Drect1.roleId then
        -- 判断是否有暗杠
        local gangType = nil
        local tmpHandCard = nil
        gangType, tmpHandCard = self.Drect1.IsGangAHandCard(self.Drect1)
        --LuaDebug.Log("HandlePengCard gangType: "..tostring(gangType))
        if gangType then
            self.ResultCard:SetActive(true)
            self.passType = enumCARD_PASS_TYPE.CARD_PASS_NULL_CARD
            self.Gang:SetActive(true)
            self.Peng:SetActive(false)
            self.tempGangType = gangType
            self.tempCard = tmpHandCard
            self.tempRoleId = roleId
        else
            self.ResultCard:SetActive(false)
        end

        MJTableCtrl.PlayTablePeng(self, 1)
        self.Drect1.HandlePengCard(self.Drect1, card, self.tempRoleId)
        self.Drect1.CanPlayCardState(self.Drect1, true)
    end

    -- 判断是哪方碰牌
    for i = 2, 4 do
        if self["Drect"..i].roleId == roleId then
            MJTableCtrl.PlayTablePeng(self, i)
            self["Drect"..i].HandlePengCard(self["Drect"..i], card)
        end
    end
end

function MJTableCtrl:HandleGangCard(roleId, index, card, state, srcRoleId)
    NGUITools.PlaySoundByPath("Music/Common/"..MJTableCtrl.GetRoleSex(self, roleId).."gang")
    -- 重置
    Client.ResetToward:Do()

    if state == enumCARD_GANG_TYPE.CARD_GANG_M_TYPE then
        Client.DeleteCard:Do(srcRoleId)
    elseif state == enumCARD_GANG_TYPE.CARD_GANG_A_TYPE then

    elseif state == enumCARD_GANG_TYPE.CARD_GANG_G_TYPE then

    end

    --计时
    MJTableCtrl.CountDownStart(self, roleId)

    -- 判断是哪方杠牌
    for i = 2, 4 do
        if self["Drect"..i].roleId == roleId then
            MJTableCtrl.PlayTableGang(self, state, i)
            self["Drect"..i].HandleGangCard(self["Drect"..i], card, state)
        end
    end

    -- 自己可以打牌了
    if roleId == self.Drect1.roleId then
        MJTableCtrl.PlayTableGang(self, state, 1)
        self.Drect1.HandleGangCard(self.Drect1, card, self.tempRoleId, self.tempGangType)
        self.ResultCard:SetActive(false)
        self.Drect1.CanPlayCardState(self.Drect1, true)
    end
end

function MJTableCtrl:HandleWinGame(data)
    local ref = LuaUIViewCtr.OpenUINotLose("MJTable/WinGame")
    ref.Init(ref, data, self.roomId)
end

function MJTableCtrl:ResetToward()
    if self.TowardCard ~= nil and not self.TowardCard:Equals(nil) then
        self.TowardCard:get_transform():SetParent(self.Direction:get_transform())
        self.TowardCard:get_transform():set_localPosition(LuaVector3.Create(0, 0, 0))
        self.TowardCard:SetActive(false)
    end
end

function MJTableCtrl:TableClose()
    Client.m_CurrentState = EClientState.E_CS_Hall
    if Client.PingGlobalTimer ~= nil then
        Timer.RemoveGlobalEvent(Client.PingGlobalTimer)
        Client.PingGlobalTimer = nil
    end

    self.gameObject:Destroy1()
    LuaUIViewCtr.UIPanel["MJTableUI"] = nil
end

function MJTableCtrl:HandleTingCard(cards)
    self.Drect1.HandleTingCard(self.Drect1, cards)
end

function MJTableCtrl:HandleGameResult(data)
    self.ResultCard:SetActive(false)
    if self.GameResult ~= nil then
        LuaDebug.Log("GameResult exist, but recv GameResult msg")
        return
    end

    self.GameResult = LuaUIViewCtr.OpenUINotLose("MJTable/GameResult")
    self.GameResult.Init(self.GameResult, data, self.roleList, self.roomId, self.mjtype)

    -- 更新积累分数
    for i = 1, #(self.roleList) do
        for j = 1, #(data.result_info.role_cards) do
            if self.roleList[i].roleid == data.result_info.role_cards[j].roleid then
                self.roleList[i].integral = data.result_info.role_cards[j].amount
                break
            end
        end
    end

    for i = 1, 4 do
        for j = 1, #(self.roleList) do
            if self["Drect"..i].roleId == self.roleList[j].roleid then
                local scoreStr = tostring(self.roleList[j].integral)
                if self.roleList[j].integral > 0 then
                    scoreStr = "+"..scoreStr
                end
                self["Drect"..i].TableHead.Score:set_text(scoreStr)
            end
        end
    end
end

function MJTableCtrl:TableClear()
    if self.GameResult ~= nil then
        self.GameResult.gameObject:Destroy1()
        self.GameResult = nil
    end

    for i = 1, 4 do
        self["Drect"..i].TableClear(self["Drect"..i])
        self["Drect"..i].Ready:SetActive(false)
    end

    -- 方向不再闪烁
    self.CountDown:set_enabled(false)
    self.TimerBack:get_gameObject():SetActive(false)

    -- 把碰杠胡界面置为false
    self.ResultCard:SetActive(false)
    self.Gang:SetActive(false)
    self.Peng:SetActive(false)
    self.Win:SetActive(false)
end

function MJTableCtrl:HandleGameBalance(balances)
    local ref = LuaUIViewCtr.OpenUINotLose("MJTable/GameBalance")
    ref.Init(ref, balances, self.roleList, self.mjtype)
end

function MJTableCtrl.GetRoleInfo(roleId, roleList)
    for i = 1, #roleList do
        if roleId == roleList[i].roleid then
            return roleList[i]
        end
    end

    return nil
end

function MJTableCtrl:Invite_OnClick()
    if self.mjtype == enumMAHJONG_TYPE.EM_HONG_TYPE then
        local title = string.format(Text.InviteTitle, self.roomId)
        local desc = string.format(Text.InviteContext, Client.RoleInfo.Amount, self.horse, self.beishu)
        local param = string.format("{\"code\":1,\"roomid\":\"%s\"}",self.roomId)
        --LuaDebug.Log("param: "..param)
        PlatformHandler.CallShare(title, desc, Client.inviteUrl, "", param, "0")
    elseif self.mjtype == enumMAHJONG_TYPE.EM_PEIX_TYPE then
        local title = string.format(Text.InviteTitlePX, self.roomId)
        local tips = ""
        if self.qidui == 1 then
            tips = tips..","..Text.QiDui
        end

        if self.xiama == 1 then
            tips = tips..","..Text.XiaMa
        end

        if self.duoxiang == 1 then
            tips = tips..","..Text.DuoXiang
        end
        local desc = string.format(Text.InviteContextPX, Client.RoleInfo.Amount, tips)
        local param = string.format("{\"code\":1,\"roomid\":\"%s\"}",self.roomId)
        LuaDebug.Log("desc: "..desc)
        PlatformHandler.CallShare(title, desc, Client.inviteUrl, "", param, "0")
    end
end

function MJTableCtrl:HandleGameReenterStateSync(data)
    LuaDebug.Log("HandleGameReenterStateSync state: "..data.state)
    if self.mjtype == enumMAHJONG_TYPE.EM_PEIX_TYPE then
        MJTableCtrl.HandleAddCode(self, nil)
    end

    if data.state == enumCARD_ACTION_TYPE.CARD_ACTION_PLAY then
        --LuaDebug.Log("type_id: "..data.card.type_id..", code_id"..data.card.code_id..", roleId: "..tostring(data.roleid))
        self.CD = 0
        self.CountDown:set_text(tostring(self.CD))
        self.CountDown:set_enabled(true)

        local spriteName, myDirect = MJTableCtrl.GetMyDirectSprite(data.roleid, self.roleList)
        --LuaDebug.Log("my direction: "..myDirect)
        self.TimerBack:set_spriteName(spriteName)
        self.TimerBack:get_gameObject():SetActive(true)

        if data.roleid == Client.RoleInfo.RoleID then
            -- 没有处理
        else
            -- 判断当前的牌是否能碰、杠
            MJTableCtrl.IsPengGang(self, data.roleid, data.card)
        end
    elseif data.state == enumCARD_ACTION_TYPE.CARD_ACTION_DEAL then
        --计时
        MJTableCtrl.CountDownStart(self, data.roleid)

        if data.roleid == Client.RoleInfo.RoleID then
            --LuaDebug.Log("type_id: "..data.card.type_id..", code_id"..data.card.code_id..", roleId: "..tostring(data.roleid))
            MJTableCtrl.HandleGetCard(self, data.roleid, data.card)
        else
            MJTableCtrl.HandleGetCard(self, data.roleid, nil)
        end
    elseif data.state == enumCARD_ACTION_TYPE.CARD_ACTION_PENG then
        --计时
        MJTableCtrl.CountDownStart(self, data.roleid)

        if data.roleid == Client.RoleInfo.RoleID then
            self.Drect1.CanPlayCardState(self.Drect1, true)
        else

        end
    elseif data.state == enumCARD_ACTION_TYPE.CARD_ACTION_GANG then
        LuaDebug.LogError("CARD_ACTION_GANG, client not have this state")
        if data.roleid == Client.RoleInfo.RoleID then

        else

        end
    elseif data.state == enumCARD_ACTION_TYPE.CARD_ACTION_HU_STATE then
        --LuaDebug.Log("type_id: "..data.card.type_id..", code_id"..data.card.code_id..", roleId: "..tostring(data.roleid))
        self.CD = 0
        self.CountDown:set_text(tostring(self.CD))
        self.CountDown:set_enabled(true)

        local spriteName, myDirect = MJTableCtrl.GetMyDirectSprite(data.roleid, self.roleList)
        --LuaDebug.Log("my direction: "..myDirect)
        self.TimerBack:set_spriteName(spriteName)
        self.TimerBack:get_gameObject():SetActive(true)

        if data.roleid == Client.RoleInfo.RoleID then
            -- 没有处理
        else
            -- 判断是否胡牌
            local huPai = self.Drect1.IsHuPai(self.Drect1, data.card)
            if huPai then
                self.ResultCard:SetActive(true)
                self.passType = enumCARD_PASS_TYPE.CARD_PASS_WINN_CARD
                self.Win:SetActive(true)
                self.Peng:SetActive(false)
            else
                self.Win:SetActive(false)
            end
        end
    end
end

function MJTableCtrl:DeleteTable(roleId)
    local roleName  = ""
    if roleId == 0 then
        roleName = Text.AdminRoleName
    else
        for i = 1, #(self.roleList) do
            if self.roleList[i].roleid == roleId then
                roleName = self.roleList[i].rolename
                break
            end
        end
    end

    -- 删除房间的提示信息
    local str = string.format(Text.TableDelete, self.roomId, roleName)
    local ref = LuaMessageBox.ShowSingle(str, nil, Text.Confirm, self)
end

function MJTableCtrl:Voice_OnPress(isPressed)
    if isPressed then
        local musicMgr=MusicManager.get_Instance()
        musicMgr:set_MusicVolume(0)
        musicMgr:set_AudioVolume(0)

        self.RecordVoice.StartRecord(self.RecordVoice)
        RecordVoice.get_Instance():StartRecord()
    else
        local musicMgr=MusicManager.get_Instance()
        musicMgr:set_MusicVolume(PlayerPrefsEx.GetFloat("bgmValue"))
        musicMgr:set_AudioVolume(PlayerPrefsEx.GetFloat("ggmValue"))

        self.RecordVoice.EndRecord(self.RecordVoice)
        local url = Client.voiceUrl.."upload/?"
        RecordVoice.get_Instance():EndRecord(self.roomId, self.Drect1.roleId, url, "VoiceRecordSuccess", "VoiceRecordFail")
    end
end

function MJTableCtrl:HandleGameRoomChat(typeId, context, roleId)
    if roleId == Client.RoleInfo.RoleID then
        return
    end

    if typeId == enumROOM_CHAT_TYPE.EM_CHAT_WORD_TYPE then
        MJTableCtrl.PlayChatContent(self, roleId, typeId, context)
    elseif typeId == enumROOM_CHAT_TYPE.EM_CHAT_EXPR_TYPE then
        MJTableCtrl.PlayChatContent(self, roleId, typeId, context)
    elseif typeId == enumROOM_CHAT_TYPE.EM_CHAT_VOIC_TYPE then
        local url = Client.voiceUrl.."download/?"
	    WWWPortraitLoader.DownLoadVoice(url, context, roleId, "DownLoadVoiceSuccess", "DownLoadVoiceFail")
    end
end

function MJTableCtrl:PlayChatContent(roleId, type, indexStr)
    if type == enumROOM_CHAT_TYPE.EM_CHAT_WORD_TYPE then
        -- 播放声音
        NGUITools.PlaySoundByPath("Music/Chat/chatword"..MJTableCtrl.GetRoleSex(self, roleId)..indexStr)
    end

    for i = 1, 4 do
        if self["Drect"..i].roleId == roleId then
            self["Drect"..i].TableHead.PlayChatContent(self["Drect"..i].TableHead, type, indexStr, i)
        end
    end
end

function MJTableCtrl:PlayRecordVoice(roleId, length)
    local musicMgr=MusicManager.get_Instance()
    musicMgr:set_MusicVolume(0)

    local len = math.ceil(length)

    Timer.NewEvent(self,len*10,len*10,MJTableCtrl.PlayRecordVoiceEnd, false, nil)

    for i = 1, 4 do
        if self["Drect"..i].roleId == roleId then
            self["Drect"..i].TableHead.PlayRecordVoice(self["Drect"..i].TableHead, len, i)
        end
    end
end

function MJTableCtrl:PlayRecordVoiceEnd()
    local musicMgr=MusicManager.get_Instance()
    musicMgr:set_MusicVolume(PlayerPrefsEx.GetFloat("bgmValue"))
end

function MJTableCtrl:NetConnectSuccess()
    LuaDebug.Log("MJTableCtrl:NetConnectSuccess")
    if Client.m_CurrentState ~= EClientState.E_CS_Table and Client.m_CurrentState ~= EClientState.E_CS_TableReady then
        return
    end

    if Client.PingGlobalTimer == nil then
        Client.PingTime = LuaDateTime.Ticks_Now()
        Client.PingGlobalTimer = Timer.NewGlobalEvent(30,10*60*60*24,Client.CheckPing,false,nil)
    end

    ClientSendMsg.SendEnterRoom(Client.RoleInfo.RoleID, self.roomId)
    --ClientSendMsg.SendReadyRoom()

    --Client.RoleInfo.RestCard = 112
    Client.ResetToward:Do()
    Client.TableClear:Do()
end

function MJTableCtrl:Chat_OnClick()
	local ref = LuaUIViewCtr.OpenUIHasBg("MJTable/ChatUI")
    ref.Init(ref, enumROOM_CHAT_TYPE.EM_CHAT_WORD_TYPE)
end

function MJTableCtrl:Emotion_OnClick()
	local ref = LuaUIViewCtr.OpenUIHasBg("MJTable/ChatUI")
    ref.Init(ref, enumROOM_CHAT_TYPE.EM_CHAT_EXPR_TYPE)
end

function MJTableCtrl:Setting_OnClick()
    local ref = LuaUIViewCtr.OpenUIHasBg("CommonUI/SettingUI")
    ref.Init(ref)
end

function MJTableCtrl:GetHostId()
    for i = 1, #(self.roleList) do
        local info = self.roleList[i]
        if info.host ~= 0 then
            return info.roleid
        end
    end
end

function MJTableCtrl:GetRoleName(roleId)
    for i = 1, #(self.roleList) do
        if self.roleList[i].roleid == roleId then
            return self.roleList[i].rolename
        end
    end
end

function MJTableCtrl:GetRoleSex(roleId)
    for i = 1, #(self.roleList) do
        if self.roleList[i].roleid == roleId then
            local sex = self.roleList[i].sex
            if sex ~= ESexType.Male then
                sex = ESexType.Female
            end

            return sex
        end
    end
end

function MJTableCtrl:PlayTablePeng(i)
    local ref = LuaUIViewCtr.OpenUINotLose("MJTable/TablePeng")

    if i == 1 then
        ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(0, -100, -50))
    elseif i == 2 then
        ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(250, 30, -50))
    elseif i == 3 then
        ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(0, 160, -50))
    elseif i == 4 then
        ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(-250, 30, -50))
    end
end

function MJTableCtrl:PlayTableGang(type, i)
    local ref = nil
    if type == enumCARD_GANG_TYPE.CARD_GANG_M_TYPE then
        ref = LuaUIViewCtr.OpenUINotLose("MJTable/TableGongGang")
    elseif type == enumCARD_GANG_TYPE.CARD_GANG_A_TYPE then
        ref = LuaUIViewCtr.OpenUINotLose("MJTable/TableAnGang")
    elseif type == enumCARD_GANG_TYPE.CARD_GANG_G_TYPE then
        ref = LuaUIViewCtr.OpenUINotLose("MJTable/TableGongGang")
    end

    if i == 1 then
        ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(0, -100, -50))
    elseif i == 2 then
        ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(250, 30, -50))
    elseif i == 3 then
        ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(0, 160, -50))
    elseif i == 4 then
        ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(-250, 30, -50))
    end
end

function MJTableCtrl:PlayTableQiangGang(roleId)
    for i = 1, 4 do
        --LuaDebug.Log("PlayTableQiangGang roleId 11111: "..roleId)
        if self["Drect"..i].roleId == roleId then
            --LuaDebug.Log("PlayTableQiangGang roleId 22222: "..roleId)
            local ref = LuaUIViewCtr.OpenUINotLose("MJTable/TableQiangGang")
            if i == 1 then
                ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(0, -100, -50))
            elseif i == 2 then
                ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(250, 30, -50))
            elseif i == 3 then
                ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(0, 160, -50))
            elseif i == 4 then
                ref.gameObject:get_transform():set_localPosition(LuaVector3.Create(-250, 30, -50))
            end

            break
        end
    end
end

function MJTableCtrl:PlayTableHu(data)
    self.ResultCard:SetActive(false)
    if data.role_list ~= nil and #(data.role_list) > 0 then
        for k = 1, #(data.role_list) do
            NGUITools.PlaySoundByPath("Music/Common/"..MJTableCtrl.GetRoleSex(self, data.role_list[k]).."hu")
            local ref = LuaUIViewCtr.OpenUINotLose("MJTable/TableHu")
            ref.Init(ref, data, data.role_list[k], true)

            for i = 1, 4 do
                if self["Drect"..i].roleId == data.role_list[k] then
                    if i == 1 then
                        ref.TweenPos:from(LuaVector3.Create(0, 30, 0))
                        ref.TweenPos:to(LuaVector3.Create(0, -150, 0))
                    elseif i == 2 then
                        ref.TweenPos:from(LuaVector3.Create(0, 0, 0))
                        ref.TweenPos:to(LuaVector3.Create(280, 0, 0))
                    elseif i == 3 then
                        ref.TweenPos:from(LuaVector3.Create(0, 30, 0))
                        ref.TweenPos:to(LuaVector3.Create(0, 160, 0))
                    elseif i == 4 then
                        ref.TweenPos:from(LuaVector3.Create(0, 0, 0))
                        ref.TweenPos:to(LuaVector3.Create(-280, 0, 0))
                    end

                    break
                end
            end
        end
    else
        NGUITools.PlaySoundByPath("Music/Common/"..MJTableCtrl.GetRoleSex(self, data.roleid).."hu")
        local ref = LuaUIViewCtr.OpenUINotLose("MJTable/TableHu")
        ref.Init(ref, data, data.roleid, false)

        for i = 1, 4 do
            if self["Drect"..i].roleId == data.roleid then
                if i == 1 then
                    ref.TweenPos:from(LuaVector3.Create(0, 30, 0))
                    ref.TweenPos:to(LuaVector3.Create(0, -150, 0))
                elseif i == 2 then
                    ref.TweenPos:from(LuaVector3.Create(0, 0, 0))
                    ref.TweenPos:to(LuaVector3.Create(280, 0, 0))
                elseif i == 3 then
                    ref.TweenPos:from(LuaVector3.Create(0, 30, 0))
                    ref.TweenPos:to(LuaVector3.Create(0, 160, 0))
                elseif i == 4 then
                    ref.TweenPos:from(LuaVector3.Create(0, 0, 0))
                    ref.TweenPos:to(LuaVector3.Create(-280, 0, 0))
                end

                break
            end
        end
    end
end

function MJTableCtrl:Exit_OnClick()
    if self.playTimer ~= nil then
        Timer.RemoveEvent(self, self.playTimer)
        self.playTimer = nil
    end

    Client.LeavePlayBack:Do()
    Client.TableClose:Do()
end

function MJTableCtrl:ParseCard(cardNumbuer)
    local type = math.floor(cardNumbuer/10)
    local code = cardNumbuer%10
    local card = {}
    card.type_id = type
    card.code_id = code

    return card
end

function MJTableCtrl:Play_OnClick()
    if self.Play:get_spriteName() == "replayPlay" then
        self.Play:set_spriteName("replayPause")

        if self.playTimer ~= nil then
            Timer.RemoveEvent(self, self.playTimer)
            self.playTimer = nil
        end
    else
        self.Play:set_spriteName("replayPlay")

        if self.playTimer == nil then
            self.playTimer = Timer.NewEvent(self,self.timerNum,self.timerNum*(#self.process.sequence - self.playNum + 1), MJTableCtrl.DoPlay, false, MJTableCtrl.DoPlayFinish)
        end
    end
end

function MJTableCtrl:Fast_OnClick()
    self.Play:set_spriteName("replayPlay")
    if self.timerNum - 5 > 0 then
        self.timerNum = self.timerNum - 5
    end

    if self.playTimer ~= nil then
        Timer.RemoveEvent(self, self.playTimer)
        self.playTimer = nil
    end

    if self.playTimer == nil then
        self.playTimer = Timer.NewEvent(self,self.timerNum,self.timerNum*(#self.process.sequence - self.playNum + 1), MJTableCtrl.DoPlay, false, MJTableCtrl.DoPlayFinish)
    end
end

function MJTableCtrl:Slow_OnClick()
    self.Play:set_spriteName("replayPlay")
    self.timerNum = self.timerNum + 5

    if self.playTimer ~= nil then
        Timer.RemoveEvent(self, self.playTimer)
        self.playTimer = nil
    end

    if self.playTimer == nil then
        self.playTimer = Timer.NewEvent(self,self.timerNum,self.timerNum*(#self.process.sequence - self.playNum + 1), MJTableCtrl.DoPlay, false, MJTableCtrl.DoPlayFinish)
    end
end

function MJTableCtrl:ReSetAddCode()
    self.CodeState:SetActive(true)
end

function MJTableCtrl:HandleAddCode(data)
    self.CodeState:SetActive(false)
end

function MJTableCtrl:AddCode_OnClick()
    ClientSendMsg.SendPXAddCode(1)
end

function MJTableCtrl:NoCode_OnClick()
    ClientSendMsg.SendPXAddCode(0)
end
