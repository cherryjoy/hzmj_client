DeleteRoomCtr = {}

function DeleteRoomCtr:Start( )
    Client.DeleteRoomAgree = Client.DeleteRoomAgree + {self, DeleteRoomCtr.AgreeState}
    Client.TableClose = Client.TableClose + {self, DeleteRoomCtr.TableClose}
end

function DeleteRoomCtr:OnDestroy( )
    Client.DeleteRoomAgree = Client.DeleteRoomAgree - {self, DeleteRoomCtr.AgreeState}
    Client.TableClose = Client.TableClose - {self, DeleteRoomCtr.TableClose}

    if self.timer ~= nil then
        Timer.RemoveEvent(self,self.timer)
        self.timer = nil
    end

    LuaUIViewCtr.UIPanel["DeleteRoomUI"] = nil
end

function DeleteRoomCtr:Init(roleId)
    local tableRef = LuaUIViewCtr.UIPanel["MJTableUI"]
    if tableRef == nil then
        return
    end

    if roleId == Client.RoleInfo.RoleID then
        self.Agree:SetActive(false)
        self.Refuse:SetActive(false)
    end

    local name = tableRef.GetRoleName(tableRef, roleId)
    self.Title:set_text(string.format(Text.DeleteRoomTitle, name))

    self.cd = 180
    self.TimeTips:set_text(string.format(Text.DeleteRoomCountDown, self.cd))
    if self.timer == nil then
        self.timer = Timer.NewEvent(self,10,10*180,DeleteRoomCtr.DoCountDown, false, DeleteRoomCtr.DoCountDownFinish)
    end

    -- 内容
    for i = 1, #(tableRef.roleList) do
        if tableRef.roleList[i].roleid == roleId then
            self["Name"..i]:set_text(string.format(Text.DeleteRoomChoosedAgree, tableRef.roleList[i].rolename))
        else
            self["Name"..i]:set_text(string.format(Text.DeleteRoomChoose, tableRef.roleList[i].rolename))
        end
    end
end

function DeleteRoomCtr:Agree_OnClick()
    ClientSendMsg.SendRoomDeleteAgree(0)
end

function DeleteRoomCtr:Refuse_OnClick()
    ClientSendMsg.SendRoomDeleteAgree(1)
end

function DeleteRoomCtr:AgreeState(deleteList)
    self.Agree:SetActive(false)
    self.Refuse:SetActive(false)

    local tableRef = LuaUIViewCtr.UIPanel["MJTableUI"]
    if tableRef == nil then
        return
    end

    for k = 1, #deleteList do
        local roleId = deleteList[k].roleid
        local result = deleteList[k].agree
        for i = 1, #(tableRef.roleList) do
            if tableRef.roleList[i].roleid == roleId then
                if result == 0 then
                    self["Name"..i]:set_text(string.format(Text.DeleteRoomChoosedAgree, tableRef.roleList[i].rolename))
                else
                    self["Name"..i]:set_text(string.format(Text.DeleteRoomChoose, tableRef.roleList[i].rolename))
                end

                break
            end
        end
    end
end

function DeleteRoomCtr:DoCountDown()
    self.cd = self.cd - 1
    self.TimeTips:set_text(string.format(Text.DeleteRoomCountDown, self.cd))
end

function DeleteRoomCtr:DoCountDownFinish()
    -- 是否发送请求结算协议

    --self.gameObject:Destroy1()
end

function DeleteRoomCtr:TableClose()
    self.gameObject:Destroy1()
end
